<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在namesilo购买域名</title>
      <link href="/2018/11/17/%E5%9C%A8namesilo%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/"/>
      <url>/2018/11/17/%E5%9C%A8namesilo%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>最近我的博客域名就要到期了，因为之前使用的域名比较长，所以这次准备换一个域名，因为在国内购买域名还需要实名认证，比较麻烦，所以我准备在国外代理商购买。目前国外最大的域名提供商应该就是GoDaddy了，不过 我看了一下GoDaddy的价格发现第一年的价格虽然比较便宜，但是续费的价格还是比较高的，而且GoDaddy如果需要隐藏whois信息的话还需要加60元。看了一下其他代理商发现namesilo的评价还不错，价格也不是太贵，而且namesilo隐藏whois信息是免费的，namesilo也是经过ICANN认证的域名提供商，所以也不用担心会突然跑路之类的。<br><a id="more"></a><br>下面就简单的写一下购买和设置的过程。</p><p>namesilo的地址是 <a href="https://www.namesilo.com/" target="_blank" rel="noopener">https://www.namesilo.com</a> ，网站如下：</p><p><img src="https://wsmcb.github.io/img/namesilo主页.jpg" alt="namesilo主页"></p><p>首先需要注册一个账号，点击 <a href="https://www.namesilo.com/create_account.php" target="_blank" rel="noopener">Create New Account</a> 注册，只需要按照提示填写相应的信息即可，传真号可以不用填，地址如果是国内的话建议用拼音，填写完成后选中同意条款，然后点击 <strong>CREATE MY NEW ACCOUNT</strong> 按钮注册，</p><p><img src="https://wsmcb.github.io/img/namesilo注册.jpg" alt="namesilo注册"></p><p>提交后验证一下邮箱地址就注册完成了，然后就可以搜索域名了，</p><p><img src="https://wsmcb.github.io/img/namesilo搜索域名.jpg" alt="namesilo搜索域名"></p><p><img src="https://wsmcb.github.io/img/namesilo搜索域名2.jpg" alt="namesilo搜索域名2"></p><p>如果发现没有想要的后缀的话可以点击 <strong>See Many More</strong> 勾选更多后缀，可选的后缀还是比较全的，不过有些后缀只能在所属国家使用，就比如cn就只能在中国使用，而且还需要备案，jp就只能在日本使用。</p><p><img src="https://wsmcb.github.io/img/namesilo更多域名.jpg" alt="namesilo更多域名"></p><p>选择完成后点击 <strong>REGISTER CHECKED DOMAINS</strong> 进入购物车，</p><p><img src="https://wsmcb.github.io/img/namesilo购物车.jpg" alt="namesilo购物车"></p><p>设置可以使用默认设置，后期可以更改，使用优惠码 <strong>silooneoff</strong> 或 <strong>onesaving</strong> 可优惠1美元，确认无误后可点击 <strong>CONTINUE</strong> 继续付款，付款支持支付宝，</p><p><img src="https://wsmcb.github.io/img/namesilo选择付款.jpg" alt="namesilo选择付款"></p><p>选中支付宝，输入支付宝绑定的邮箱地址，点击 <strong>Go</strong> 跳转到支付宝付款页付款，购买完成后会跳转到账户首页，点击 <strong>Domain Manager</strong> 进入域名管理，</p><p><img src="https://wsmcb.github.io/img/namesilo进入域名管理.jpg" alt="namesilo进入域名管理"></p><p>点击管理DNS</p><p><img src="https://wsmcb.github.io/img/namesilo设置DNS.jpg" alt="namesilo设置DNS"></p><p>默认有几条记录，可以删除，我这里使用的是A记录，点击 <strong>A</strong> 创建一条A记录，</p><p><img src="https://wsmcb.github.io/img/namesilo创建A记录.jpg" alt="namesilo创建A记录"></p><p>HOSTNAME 可以留空，也可以填www，IPV4 ADDRESS 填写服务器IP，TTL 改为3600，设置完成后点击提交，</p><p><img src="https://wsmcb.github.io/img/namesilo设置A记录1.jpg" alt="namesilo设置A记录1"></p><p>我的方案是创建两条A记录，一条的HOSTNAME留空，一条的HOSTNAME填www，这样的话无论加不加www都能解析到我的服务器。</p><p>以上就是我在namesilo购买域名的过程，当然 还有很多namesilo的设置这里还没有写到，不过那些并不重要，如果需要续费或转出的话在写。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP PDO简单使用教程</title>
      <link href="/2018/10/24/PHP-PDO%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/10/24/PHP-PDO%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>PDO是PHP中用来访问数据库的一个轻量型的接口，相比起Mysqlli来说，PDO可支持更多种的数据库，而Mysqli只支持Mysql。通过PDO可实现使用同样的方法来访问不同的数据库，如果您建站初期使用的是Mysql，但后期需要更换数据库的话，只需要修改一些配置信息，不用修改类和方法就可以实现更换数据库。<br><a id="more"></a><br>连接数据库</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> DATABASE_TYPE = <span class="string">'mysql'</span>;  <span class="comment">//  数据库类型</span></span><br><span class="line"><span class="keyword">const</span> DATABASE_SERVER = <span class="string">'127.0.0.1'</span>;  <span class="comment">//  服务器地址</span></span><br><span class="line"><span class="keyword">const</span> DATABASE_NAME = <span class="string">'bbs'</span>;  <span class="comment">//  要连接的数据库名称</span></span><br><span class="line"><span class="keyword">const</span> USER_NAME = <span class="string">'root'</span>;  <span class="comment">//  数据库用户名</span></span><br><span class="line"><span class="keyword">const</span> PASSWORD = <span class="string">'root'</span>;  <span class="comment">//  数据库密码</span></span><br><span class="line"><span class="keyword">const</span> DSN = DATABASE_TYPE . <span class="string">':host='</span> . DATABASE_SERVER . <span class="string">';dbname='</span> . DATABASE_NAME;  <span class="comment">//  数据源</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    $pdo = <span class="keyword">new</span> PDO(DSN, USER_NAME,PASSWORD);  <span class="comment">//  创建PDO对象</span></span><br><span class="line">&#125;<span class="keyword">catch</span> (PDOexception $e) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $e-&gt;getMessage();  <span class="comment">//  输出异常信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的 DSN常量是一个包含了数据库种类、数据库主机名、数据库名称 的字符串，下面是不使用拼接的写法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> DSN = <span class="string">'mysql:host=127.0.0.1;dbname=bbs'</span>;</span><br></pre></td></tr></table></figure><p>除了上面的写法外，也还有其他的写法，在PHP的官网教程中有说明，不过感觉这种写法用的要多一些。</p><p><strong>PDO() 对象</strong> PDO是操作数据库必须的一个对象，它包含了一系列的操作数据库的方法，下面是参数说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>dsn</td><td>string</td><td>包含了 数据库种类、数据库主机名、数据库名称的数据源</td></tr><tr><td>userName</td><td>string</td><td>数据库用户名</td></tr><tr><td>password</td><td>string</td><td>数据库密码</td></tr></tbody></table><p>插入数据</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"INSERT INTO user (userName, password) VALUES ('Charlie', '123456')"</span>;  <span class="comment">//  SQL语句</span></span><br><span class="line">$result = $pdo-&gt;exec($sql);  <span class="comment">//  执行插入</span></span><br><span class="line"><span class="keyword">echo</span> $result;  <span class="comment">//  输出受影响的行数</span></span><br></pre></td></tr></table></figure><p><strong>exec() 方法</strong> exec执行SQL语句，返回受影响的行数。</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>sql</td><td>string</td><td>要执行的SQL语句</td></tr></tbody></table><p>exec方法 还可以用于修改和删除数据，代码如下：</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  把Charlie的密码修改为000000</span></span><br><span class="line">$sql = <span class="string">"UPDATE user SET password = '000000' WHERE userName = 'Charlie'"</span>;  <span class="comment">//  SQL语句</span></span><br><span class="line">$result = $pdo-&gt;exec($sql);  <span class="comment">//  执行修改</span></span><br><span class="line"><span class="keyword">echo</span> $result;  <span class="comment">//  输出受影响的行数</span></span><br></pre></td></tr></table></figure><p>删除和修改都差不多，只是SQL语句不一样，这里就不写了。</p><p>下面是查询的PHP代码：</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  查询出user表的所有数据</span></span><br><span class="line">$sql = <span class="string">"SELECT * FROM user"</span>;  <span class="comment">//  SQL语句</span></span><br><span class="line">$data = $pdo-&gt;query($sql);  <span class="comment">//  执行查询语句</span></span><br><span class="line"><span class="keyword">if</span> ($data-&gt;rowCount() &gt; <span class="number">0</span>) &#123;  <span class="comment">//  判断查询到的行数是否大于0</span></span><br><span class="line">    $dataArr = $data-&gt;fetchAll();  <span class="comment">//  把所有查询到的数据转换为数组</span></span><br><span class="line">    print_r($dataArr);  <span class="comment">//  输出数组</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'未能查询到数据！'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询到的数据：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [id] =&gt; <span class="number">1</span></span><br><span class="line">            [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">            [userName] =&gt; John</span><br><span class="line">            [<span class="number">1</span>] =&gt; John</span><br><span class="line">            [password] =&gt; <span class="number">123456</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">123456</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [id] =&gt; <span class="number">2</span></span><br><span class="line">            [<span class="number">0</span>] =&gt; <span class="number">2</span></span><br><span class="line">            [userName] =&gt; George</span><br><span class="line">            [<span class="number">1</span>] =&gt; George</span><br><span class="line">            [password] =&gt; <span class="number">123456</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">123456</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [id] =&gt; <span class="number">3</span></span><br><span class="line">            [<span class="number">0</span>] =&gt; <span class="number">3</span></span><br><span class="line">            [userName] =&gt; Charlie</span><br><span class="line">            [<span class="number">1</span>] =&gt; Charlie</span><br><span class="line">            [password] =&gt; <span class="number">000000</span></span><br><span class="line">            [<span class="number">2</span>] =&gt; <span class="number">000000</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>user表</p><p><img src="https://wsmcb.github.io/img/user表内容.jpg" alt="user表内容"></p><p><strong>query() 方法</strong> query执行SQL语句，返回PDOStatement对象，可以理解为结果集。下面是query的参数：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>sql</td><td>string</td><td>要执行的SQL语句</td></tr></tbody></table><p>PDOStatement对象中又有一些方法：</p><p><strong>rowCount() 方法</strong> 获取返回的行数，这个方法在一些数据库可能用不了，但在Mysql可以用。</p><p><strong>fetchAll() 方法</strong> 返回一个包含结果集中所有行的数组，也就是把查询到的所有行转换为数组。</p><p><strong>fetch() 方法</strong> 从结果集中获取下一行，如果只查询一行数据的话，就比较适合用这个方法。</p><p>下面是通过 fetch方法 获取数据：</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  查询出user表的所有数据</span></span><br><span class="line">$sql = <span class="string">"SELECT * FROM user"</span>;  <span class="comment">//  SQL语句</span></span><br><span class="line">$data = $pdo-&gt;query($sql);  <span class="comment">//  执行查询语句</span></span><br><span class="line"></span><br><span class="line">$dataArr = $data-&gt;fetch();  <span class="comment">//  获取一行</span></span><br><span class="line">print_r($dataArr);  <span class="comment">//  输出数组</span></span><br></pre></td></tr></table></figure><p>查询结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [id] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [userName] =&gt; John</span><br><span class="line">    [<span class="number">1</span>] =&gt; John</span><br><span class="line">    [password] =&gt; <span class="number">123456</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">123456</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>通过 fetch方法 无论查询到多少行都只会获取一行。</p><p>以上就是PHP PDO的简单使用方法，这里只是写了简单的 增、删、改、查，如果要查看所有方法可以到PHP官网。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Linux的软链接和硬链接</title>
      <link href="/2018/09/28/%E5%85%B3%E4%BA%8ELinux%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E5%92%8C%E7%A1%AC%E9%93%BE%E6%8E%A5/"/>
      <url>/2018/09/28/%E5%85%B3%E4%BA%8ELinux%E7%9A%84%E8%BD%AF%E9%93%BE%E6%8E%A5%E5%92%8C%E7%A1%AC%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>在使用Windows安装软件的时候，安装程序一般都会在桌面创建一个快捷方式，方便使用，而在Linux上也有一种类似于Windows快捷方式的文件类型，这就是软链接。虽然大多数Linux服务器都没有桌面，但是对于一些经常需要查看或修改的目录层级比较升的配置文件或日志文件来说，建立一个软链接，放在常用的文件夹，找起来也会比较方便。<br><a id="more"></a><br>下面是创建软链接的方法</p><p><strong>ln -s</strong> 命令可以创建一个软链接，使用方法为 ln -s 指向的文件名 软链接的名称，</p><p>例如我要给home/index.php创建一个软链接，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /home/index.php /home/首页</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/创建软链接.jpg" alt="创建软链接"></p><p>查看文件信息，</p><p><img src="https://wsmcb.github.io/img/查看软链接.jpg" alt="查看文件信息"></p><p>在上图中可以看到 首页文件是指向 index.php，所以如果删除了index.php 创建的首页软链接就不能用了，当打开 首页文件时，其实打开的也就是 index.php，也就是说 当打开软链接时，其实打开的就是软链接指向的原文件，删除软链接不会影响原文件。</p><p>删除原文件后，</p><p><img src="https://wsmcb.github.io/img/删除原文件后.jpg" alt="删除原文件后"></p><p>如果现在在创建一个名为 index.php 的文件，首页 软链接又可以恢复使用了，所以即使是指向的原文件不存在也是可以创建软链接的。</p><p>除了软链接外，在Linux中还有一种名为硬链接的文件类型，当给一个文件创建硬链接时，Linux会复制一个与源文件的inode编号相同的文件，当修改硬链接文件内容时，源文件的内容也会改变，类似于我们平时使用的云同步，当修改本地文件时，云端的文件内容也会改变。不过Linux上如果删除了硬链接源文件并不会一起被删除，而且删除了源文件硬链接文件也可以继续使用，但硬链接需要原文件存在才能创建，不可以为不存在的文件创建硬链接，也不能为目录创建硬链接。</p><p>下面是创建硬链接的方法</p><p><strong>ln 或 link</strong> 都可以创建，格式为 link 要指向的文件名 硬链接名称，ln也是一样的。</p><p>这里还是给 /home/index.php 创建硬链接，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link /home/index.php /home/首页</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/创建硬链接.jpg" alt="创建硬链接"></p><p>使用 <strong>ls -l -i</strong> 可以显示inode编号</p><p><img src="https://wsmcb.github.io/img/查看inode.jpg" alt="查看inode"></p><p>从上图中可以看到 除了文件名不同，index.php 和 首页 都是一样的，这两个文件的inode节点数量都是2，如果在给其中一个文件创建一个硬链接inode节点数量就会变为3，如果修改了其中一个文件的内容，inode编号相同的文件的内容也会改变，如果删除了一个文件，inode相同的文件也不会受到影响。软链接和硬链接比较不同的地方就是，软链接只是一个保存了源文件位置的文件，只要没有了源文件，软链接也不能打开。而硬链接是一个完整的文件，和源文件之间相互关联又相互独立，即使删除了源文件，关联的硬链接文件也可以继续使用。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Linux VPS + 宝塔Linux面板快速搭建网站</title>
      <link href="/2018/09/11/%E4%BD%BF%E7%94%A8Linux-VPS-%E5%AE%9D%E5%A1%94Linux%E9%9D%A2%E6%9D%BF%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2018/09/11/%E4%BD%BF%E7%94%A8Linux-VPS-%E5%AE%9D%E5%A1%94Linux%E9%9D%A2%E6%9D%BF%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>对于刚学网站开发的初学者来说，最简单的建站方法应该就是使用虚拟主机了，购买以后直接自动配置好网站运行环境，只需要用FTP工具上传网页就可以直接访问了，我刚学编程的时候也是用这种方法。虚拟主机虽然方便，但可设置的选项也比较少，而且有的便宜的虚拟主机还不支持多站点和多数据库，网站数据库只能放在默认的一个数据库中，也不能设置数据库。而使用VPS服务器搭建网站就可以解决以上说的这些问题，不过在Linux上搭建网站也不是一件容易的事情，就连在windows配置PHP运行环境都不容易，这时候就需要用到Web的Linux管理面板了，这里就写一下宝塔Linux管理面板搭建网站的方法。<br><a id="more"></a><br>用国外的VPS搭建网站价格是真的便宜，而且还能干其他事情，下面是国内虚拟主机和国外VPS的价格对比图。</p><p><img src="https://wsmcb.github.io/img/虚拟主机截图.jpg" alt="虚拟主机截图"></p><p>VPS</p><p><img src="http://wsmcb.github.io/img/VPS截图.jpg" alt="VPS截图"></p><p>下面说搭建方法</p><p>使用Linux远程控制工具连接VPS服务器，这里推荐Xshell 5，个人家庭使用免费，而且有中文，连接完成后进入宝塔面板的官网 <a href="https://www.bt.cn/" target="_blank" rel="noopener">https://www.bt.cn/</a>，选择Linux免费版，</p><p><img src="https://wsmcb.github.io/img/宝塔官网.jpg" alt="宝塔官网"></p><p>根据Linux的版本选择脚本地址粘贴，我用的是CentOS，所以我选择CentOS的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/安装宝塔P1.jpg" alt="安装"></p><p>粘贴完成后回车，等待一段时间会询问是否确认安装，直接输入y 回车，</p><p><img src="https://wsmcb.github.io/img/安装宝塔P2.jpg" alt="询问是否安装"></p><p>在等待一段时间，安装完成后会显示面板的登录地址 用户名 密码，</p><p><img src="https://wsmcb.github.io/img/宝塔安装完成.jpg" alt="宝塔安装完成"></p><p>在浏览器中输入地址，默认为IP + 端口号，进入宝塔面板登录界面，输入账号和密码登录，新版本的还需要加一些参数，直接复制地址到浏览器粘贴登录，</p><p><img src="https://wsmcb.github.io/img/宝塔登录.jpg" alt="宝塔登录"></p><p>登录完成后会弹出运行环境的安装弹框，选择服务器和PHP版本安装，</p><p><img src="https://wsmcb.github.io/img/宝塔安装PHP.jpg" alt="选择安装环境"></p><p>如果有时间的话建议选择编译安装，安装时间在30分钟以上，在安装的时候可以关闭面板 做其他的事情，不用一直等着，安装完成后建议先更改一下面板的设置，</p><p><img src="https://wsmcb.github.io/img/宝塔设置P1.jpg" alt="宝塔设置"></p><p>可以直接给面板绑定一个二级域名，防止其他人用域名 + 端口号登录，还有默认的账号和密码是自动生成的，建议更改，</p><p><img src="https://wsmcb.github.io/img/宝塔设置P2.jpg" alt="宝塔设置"></p><p>接着就可以建立站点了，点击侧边栏的网站，进入站点管理页，点击添加站点，根据提示输入域名，数据库可以不用创建，后期自己创建，FTP根据情况选择，然后选择一个已安装的PHP版本，点击提交来创建站点，</p><p><img src="https://wsmcb.github.io/img/宝塔建立网站.jpg" alt="宝塔建立网站"></p><p>宝塔面板自带一个Web版的文件管理，站点创建完成后 点击侧边栏的文件，找到以下路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/www/wwwroot</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/宝塔文件.jpg" alt="宝塔文件"></p><p>在这里有一个和域名相同的目录，这就是网站目录，进入网站目录后会有几个自动生成的HTML文件，可以直接删除，然后点击上传或使用FTP工具来上传网页，上传完成后如果不出意外的话，输入域名或IP就可以访问网站了，如果要管理数据库的话，点击侧边栏的数据库，默认的Mysql是没有密码的，可以设置一个密码，</p><p><img src="https://wsmcb.github.io/img/宝塔mysql.jpg" alt="宝塔mysql"></p><p>宝塔面板自带一个phpmyadmin，可以使用phpmyadmin自己创建数据库，这样一个网站就已经创建完成了。</p><p>以上就是使用宝塔Linux面板快速建站的方法，我上面只是写了简单创建的方法，还有很多设置项还没有配置。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>启用Win10的Linux子系统</title>
      <link href="/2018/08/30/%E5%90%AF%E7%94%A8Win10%E7%9A%84Linux%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2018/08/30/%E5%90%AF%E7%94%A8Win10%E7%9A%84Linux%E5%AD%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>对于使用windows的用户来说，学习Linux最方便的方法就是安装虚拟机，然后在虚拟机里安装Linux，毕竟要在同一台电脑上安装windows和Linux还是有一定难度的，但即使是在虚拟机里安装Linux也有一堆的参数需要设置，对于不太了解的人来说，还是比较繁琐的。不过在Win10系统里内置了一个Linux的子系统，只需要通过几步简单的设置就可以开启，这里就来记录一下我开启的过程。<br><a id="more"></a><br>打开设置，找到 更新和安全，找到 开发者选项，打开 开发人员模式，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP1.jpg" alt="开发者选项"></p><p>打开控制面板，找到 卸载程序，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP2.jpg" alt="控制面板"></p><p>点击 启用或关闭 Windows 功能，勾选 适用于 Linux 的 Windows 子系统，选择完成后 确定，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP3.jpg" alt="卸载程序"></p><p>等待一段时间，然后 重启，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP4.jpg" alt="启用Linux"></p><p>重启后打开命令行，输入 lxrun /install /y 安装Linux，</p><p><img src="https://wsmcb.github.io/img/win10Linux5.jpg" alt="安装Linux"></p><p>等待一段时间，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP6.jpg" alt="正在安装Linux"></p><p>安装完成后，在命令行输入 bash 进入Ubuntu，进入以后就可以使用了，默认root用户，没有密码，如果需要的话也可以设置，</p><p><img src="https://wsmcb.github.io/img/win10LinuxP7.jpg" alt="Linux界面"></p><p><img src="https://wsmcb.github.io/img/win10LinuxP8.jpg" alt="Linux界面"></p><p>以上就是在Win10启用Linux的方法，后续可能会有补充。</p><hr><p>2019年2月12日更新</p><p>如果输入 <strong>lxrun /install /y</strong> 不能安装的话可以打开应用商店，搜索 <strong>wsl</strong> 会搜索到几个可选的Linux系统，选择一个，</p><p><img src="https://wsmcb.github.io/img/wsl1.jpg" alt="搜索wsl"></p><p>然后和平时安装应用一样的安装，</p><p><img src="https://wsmcb.github.io/img/wsl2.jpg" alt="安装wsl"></p><p>安装完成后在开始菜单可以找到，</p><p><img src="https://wsmcb.github.io/img/wsl3.jpg" alt="开始菜单"></p><p>有其他的以后在更新。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5 Notification桌面通知</title>
      <link href="/2018/07/28/HTML5-Notification%E6%A1%8C%E9%9D%A2%E9%80%9A%E7%9F%A5/"/>
      <url>/2018/07/28/HTML5-Notification%E6%A1%8C%E9%9D%A2%E9%80%9A%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>通知是很多网站中比较重要的一个功能，无论是邮箱还是在线Web聊天程序，又或是论坛 留言板等都会用到通知功能。网页和APP不同，APP可以直接在通知栏或任务栏显示通知，而网页是运行在浏览器中的，所以只能在页面上显示通知，网页常见的通知方式有 弹窗 变换网页标题 或者直接显示未读消息数量等，这些通知有时候可能不会被用户注意到。<br><a id="more"></a><br>HTML5中加入的Notification通知可以解决用户注意不到通知的问题，Notification通知在浏览器最小化或浏览其它网页时也能显示通知，虽然还不能脱离浏览器显示，但比起自定义网页弹窗来说体验要更好，例如QQ邮箱在收到新邮件时只有网页标题会改变，只有随时注意着网页标题或收件箱才能及时看到邮件，而Gmail邮箱在收到新邮件时就会显示Notification通知，而且还有提示音，只要浏览器不关闭就可以显示通知。</p><p>下面是Notification的简单使用方法</p><p>要显示Notification通知需要获得用户的授权，当用户允许后，同站点下的网页都可以显示通知。</p><p>首先需要判断浏览器是否允许显示通知，</p><p><strong>Notification.permission属性</strong></p><p>Notification.permission属性可以获取浏览器是否允许通知，可能返回的值如下：</p><table><thead><tr><th>返回值</th><th>含义</th></tr></thead><tbody><tr><td>default</td><td>默认 不知道用户的选择</td></tr><tr><td>granted</td><td>用户允许显示通知</td></tr><tr><td>denied</td><td>用户不允许显示通知</td></tr></tbody></table><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  判断是否允许显示通知</span></span><br><span class="line"><span class="keyword">if</span> (Notification.permission == <span class="string">"default"</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'用户还未选择过'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (Notification.permission == <span class="string">"granted"</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'用户允许通知'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'用户不允许通知'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果用户不允许显示通知的话就不能请求通知权限了，只能引导用户在设置中允许通知。</p><p>如果用户还未选择过的话就可以请求通知权限了，一般浏览器默认都是未选择的，不过Google Chrome只能是启用了HTTPS的网站才能显示通知，所以下面的示范都是在Edge浏览器下进行的。</p><p><strong>Notification.requestPermission() 方法</strong></p><p>Notification.requestPermission()方法可以请求通知权限，如果用户已经允许通知的话就不用请求了。</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  请求通知权限</span></span><br><span class="line">Notification.requestPermission().then(<span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="string">"granted"</span>) &#123;  <span class="comment">//  是否同意显示通知</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'允许通知'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="string">"default"</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'用户未选择'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'用户不允许通知'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/浏览器通知询问.jpg" alt="浏览器通知询问"></p><p>返回值可以参考上面的表格，</p><p>成功获取通知权限后就可以显示通知了。</p><p><strong>new Notification(title, options) 构造方法</strong></p><p>new Notification() 的构造方法可以显示通知，需要传入两个参数，参数说明如下：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>title</td><td>String</td><td>通知的标题</td></tr><tr><td>options</td><td>Json</td><td>通知的配置信息</td></tr></tbody></table><p>下面是配置信息说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>dir</td><td>String</td><td>文字的方向；它的值可以是：auto 自动、ltr 从左到右、rtl 从右到左</td></tr><tr><td>lang</td><td>String</td><td>通知使用的语言，一般可省略</td></tr><tr><td>body</td><td>String</td><td>通知内容</td></tr><tr><td>tag</td><td>String</td><td>赋予通知一个ID，以便在必要的时候对通知进行刷新、替换或移除</td></tr><tr><td>icon</td><td>String</td><td>一个图片的URL，将被用于显示通知的图标</td></tr><tr><td>silent</td><td>boolean</td><td>通知提示音，默认为 false</td></tr><tr><td>sound</td><td>String</td><td>通知提示音地址，因为提示音是在线加载的，所以文件不要太大</td></tr></tbody></table><p>上面的配置信息很多都可以省略，下面是简单的代码演示</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> N = <span class="keyword">new</span> Notification(<span class="string">'用户通知'</span>, &#123;</span><br><span class="line">    <span class="string">"body"</span>: <span class="string">"您的会员到期了，赶快充值吧"</span>,</span><br><span class="line">    <span class="string">"tag"</span>: <span class="string">"n1"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/浏览器通知.jpg" alt="浏览器通知"></p><p>上面的通知只包含 标题 内容和ID，</p><p>Notification还有一些方法和事件，这些方法只能在 new Notification 后才能用，</p><p><strong>Notification.onclick 事件</strong></p><p>通知被点击，</p><p>代码演示</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  显示通知</span></span><br><span class="line"><span class="keyword">var</span> N = <span class="keyword">new</span> Notification(<span class="string">'用户通知'</span>, &#123;</span><br><span class="line">    <span class="string">"body"</span>: <span class="string">"您的会员到期了，赶快充值吧"</span>,</span><br><span class="line">    <span class="string">"tag"</span>: <span class="string">"n1"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  通知被点击</span></span><br><span class="line">N.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    location.href = <span class="string">'http://www.machangbin.com'</span>;  <span class="comment">//  跳转</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Notification.close() 方法</strong></p><p>Notification.close() 方法可以关闭通知，不过一般通知显示一段时间后也会自动关闭，</p><p>代码演示</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  显示通知</span></span><br><span class="line"><span class="keyword">var</span> N = <span class="keyword">new</span> Notification(<span class="string">'用户通知'</span>, &#123;</span><br><span class="line">    <span class="string">"body"</span>: <span class="string">"您的会员到期了，赶快充值吧"</span>,</span><br><span class="line">    <span class="string">"tag"</span>: <span class="string">"n1"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  3秒后关闭通知</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    N.close();  <span class="comment">//  关闭通知</span></span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p><strong>Notification.onerror 事件</strong></p><p>Notification.onerror 方法在通知遇到异常时触发，使用这个事件可以在Notification通知遇到异常时启用其它备用通知。</p><p>以上就是Notification通知的简单使用方法，目前我测试了Microsoft Edge 可以正常显示，Google Chrome只能在HTTPS的网站显示，IE12不能显示，手机浏览器我测试了微信的浏览器和小米自带的浏览器都不能显示，所以如果要使用Notification通知的话，建议在准备一套备用通知方案，在不支持Notification的浏览器或者通知遇到异常时可以使用备用方案。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用AJAX + FormData上传文件</title>
      <link href="/2018/07/25/%E4%BD%BF%E7%94%A8AJAX-FormData%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/"/>
      <url>/2018/07/25/%E4%BD%BF%E7%94%A8AJAX-FormData%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>FormData是HTML5中新增的一个API，FormData可以把数据封装成类似HTML表单的包含 key和value 的数据，主要用于AJAX提交，有了FormData在使用AJAX提交数据的时候就没必要使用类似拼接URL的方式来拼接数据了。FormData除了能封装字符串外也能封装文件，使用FormData配合AJAX可实现无刷新上传文件，在配上进度条可以极大的提升用户体验。这里就来简单的写一下使用FormData + AJAX上传文件。<br><a id="more"></a><br>HTML代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">id</span>=<span class="string">"progress"</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"uploadBtn"</span>&gt;</span>开始上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面包含一个文件选择控件，一个进度条控件和一个按钮，这个进度条控件是HTML5中新加入的，在不同浏览器下显示的外观也可能会不一样，如果要在所有浏览器下都显示一样的话，可以通过其他HTML标签嵌套并更改长度的方式来模拟进度条，不过在无障碍支持方面可能不太好。</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fileBox = <span class="built_in">document</span>.querySelector(<span class="string">'#file'</span>);  <span class="comment">//  获取文件选择控件</span></span><br><span class="line"><span class="keyword">var</span> uploadBtn = <span class="built_in">document</span>.querySelector(<span class="string">'#upload-btn'</span>);  <span class="comment">//  获取上传按钮</span></span><br><span class="line"><span class="keyword">var</span> progress = <span class="built_in">document</span>.querySelector(<span class="string">'#progress'</span>);  <span class="comment">//  获取进度条</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  上传按钮点击</span></span><br><span class="line">uploadBtn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//  验证一下文件名是否为空</span></span><br><span class="line">    <span class="keyword">if</span> (fileBox.value == <span class="string">''</span>) &#123;</span><br><span class="line">        alert(<span class="string">'请选择文件'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  新建FormData对象</span></span><br><span class="line">    <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="comment">//  给FormData添加一个键值对，传入key和文件</span></span><br><span class="line">    formData.append(<span class="string">'file'</span>, fileBox.files[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 新建XMLHttpRequest对象</span></span><br><span class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    <span class="comment">//  设置提交方式 url 是否异步</span></span><br><span class="line">    xhr.open(<span class="string">'post'</span>, <span class="string">'server.php'</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">//  设置请求头</span></span><br><span class="line">    xhr.setRequestHeader(<span class="string">'X-Request-With'</span>, <span class="string">'XMLHttpRequest'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  此方法在上传进度改变时触发</span></span><br><span class="line">    xhr.upload.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//  是否包含进度数据</span></span><br><span class="line">        <span class="keyword">if</span> (event.lengthComputable) &#123;</span><br><span class="line">            <span class="comment">//  根据已上传文件的大小和总大小计算出百分比</span></span><br><span class="line">            <span class="keyword">var</span> complete = <span class="built_in">Math</span>.floor(event.loaded / event.total * <span class="number">100</span>);</span><br><span class="line">            <span class="comment">//  把百分比传给进度条</span></span><br><span class="line">            progress.value = complete;</span><br><span class="line">            <span class="comment">//  把百分比传给进度条</span></span><br><span class="line">            progress.innerHTML = complete;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  提交数据，传入已封装的FormData</span></span><br><span class="line">    xhr.send(formData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  此方法在成功提交并接收到数据的时候触发</span></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//  验证一下是否全部接收完成</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="comment">//  在控制台输出接收到的数据</span></span><br><span class="line">            <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码包含注释，所以可能会有些长，实际上很简单，几行代码就能完成。</p><p>下面是一些用到的对象和方法：</p><p><strong>FormData(form) 对象</strong> 建立FormData对象，可以传入HTML的form表单，也可以为空。</p><p><strong>append(key, value) 方法</strong> 给FormData添加一个键值对，需要传入key和value，类似表单的name和value，值可以传入字符串和文件。</p><p>下面是XMLHttpRequest的上传进度方法，有关XMLHttpRequest对象的使用可以看<a href="http://www.changbin.me/index.php/2018/04/17/ajax%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">AJAX简单使用教程</a> 。</p><p><strong>upload.onprogress事件</strong> 此事件只会在上传时触发，如果要监听上传进度需要传入event。</p><p><strong>event.loaded属性</strong> 已上传文件的字节数。</p><p><strong>event.total属性</strong> 文件的总大小 字节。</p><p>根据event.loaded已上传文件的字节数和event.total文件的总大小就可以计算出已上传的百分比。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJAX </tag>
            
            <tag> 上传文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP删除文件夹和文件夹下的所有文件</title>
      <link href="/2018/07/24/PHP%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6/"/>
      <url>/2018/07/24/PHP%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>在PHP网站中可能会遇到需要用PHP删除文件夹的情况，例如一些网盘或在线文件管理等，最近我开发的一个在线文件管理器就需要用PHP删除文件夹，这个在线文件管理器主要是给我用来远程管理Linux的文件，Linux虽然可以通过FTP来管理文件，但只能在电脑上使用，而Web的文件管理器只要在有浏览器的设备上就能使用。在开发删除功能的时候遇到了一个问题，PHP删除文件夹的函数 rmdir 只能删除空文件夹，在遇到非空文件夹的情况下就会报错，要解决这个问题只能写一个自定义函数或方法，这里我就记录一下我写的函数，可以直接调用。<br><a id="more"></a><br>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  删除文件，需要传入一个包含文件名的数组，可删除多个文件或文件夹</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteDir</span><span class="params">($fileNameArr = array<span class="params">()</span>)</span> </span>&#123;</span><br><span class="line">    $successfullyDeleted = <span class="keyword">array</span>();  <span class="comment">//  用来保存已删除文件的文件名</span></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; count($fileNameArr);$i ++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (file_exists($fileNameArr[$i])) &#123;  <span class="comment">//  文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (!is_dir($fileNameArr[$i])) &#123;  <span class="comment">//  是否是文件而不是文件夹</span></span><br><span class="line">                <span class="comment">//  如果不是文件夹就直接删除文件</span></span><br><span class="line">                <span class="keyword">if</span> (unlink($fileNameArr[$i])) &#123;</span><br><span class="line">                    <span class="comment">//  如果删除成功就把已删除的文件添加到数组</span></span><br><span class="line">                    array_push($successfullyDeleted, $fileNameArr[$i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//  如果是文件夹就匹配文件夹内的所有文件</span></span><br><span class="line">                $fileListArr = glob($fileNameArr[$i] . <span class="string">'/*'</span>);</span><br><span class="line">                <span class="keyword">if</span> (count($fileListArr) &lt; <span class="number">1</span>) &#123;  <span class="comment">//  是否匹配到文件</span></span><br><span class="line">                    <span class="comment">//  如果没有匹配到文件，说明这是一个空文件夹，直接删除</span></span><br><span class="line">                    <span class="keyword">if</span> (rmdir($fileNameArr[$i])) &#123;</span><br><span class="line">                        <span class="comment">//  如果删除成功就把已删除的文件添加到数组</span></span><br><span class="line">                        array_push($successfullyDeleted, $fileNameArr[$i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//  如果匹配到文件就调用自身，继续匹配删除</span></span><br><span class="line">                    deleteDir($fileListArr);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//  判断一下需要删除的文件或文件夹是否还存在</span></span><br><span class="line">            <span class="keyword">if</span> (file_exists($fileNameArr[$i])) &#123;</span><br><span class="line">                <span class="comment">//  如果还存在的话就调用自身继续删除</span></span><br><span class="line">                deleteDir(<span class="keyword">array</span>($fileNameArr[$i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  执行完毕后返回已删除文件或文件夹的名称</span></span><br><span class="line">    <span class="keyword">return</span> $successfullyDeleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是调用方法</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  模拟要删除的文件数组</span></span><br><span class="line">$fileName = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'新建文件夹'</span>,</span><br><span class="line">    <span class="string">'文本.txt'</span>,</span><br><span class="line">    <span class="string">'图片.jpg'</span>,</span><br><span class="line">    <span class="string">'音频.mp3'</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">//  调用删除函数，接收返回的已删除文件的文件名</span></span><br><span class="line">$files = deleteDir($fileName);</span><br></pre></td></tr></table></figure><p>以上就是我写的一个删除文件的函数，因为代码比较简单，而且大多数都有注释，一看就懂，这里就不详细的解释了。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux VI编辑器简单使用教程</title>
      <link href="/2018/06/11/Linux-VI%E7%BC%96%E8%BE%91%E5%99%A8%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/06/11/Linux-VI%E7%BC%96%E8%BE%91%E5%99%A8%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>vi编辑器是Linux和Unix上最基本的文本编辑器，工作在字符模式下。由于不需要图形界面，vi是效率很高的文本编辑器。尽管在Linux上也有很多图形界面的编辑器可用，但vi在系统和服务器管理中的功能是那些图形编辑器所无法比拟的。<br><a id="more"></a><br>还有一个vi改进版叫vim，主要加入了一些代码高亮功能，操作方法和vi差不多，因为vi是每种Linux都有的编辑器，所以这里就只说vi。</p><p>通过vi打开文件</p><p>vi打开文件的方法是 vi + 空格 + 文件名，例如我要打开home目录下的1.php：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /home/1.php</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/vi1.jpg" alt="Vi打开文件"></p><p>打开以后会看到如下界面</p><p><img src="https://wsmcb.github.io/img/vi2.jpg" alt="Vi"></p><p>这个1.php文件里有一些内容，可以用 键盘的 上 下 左 右 来控制编辑器的光标，不过现在还不能编辑，如果要编辑的话可以按i，一般的输入和windows的差不多，如果要退出编辑模式的话可以按ESC，按ESC后会退出编辑模式，但不会退出vi。</p><p>保存</p><p>保存文件需要在退出编辑模式的情况下输入命令，</p><p>下面是操作命令：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>:w</td><td>保存</td></tr><tr><td>:wq</td><td>保存并退出vi</td></tr><tr><td>:q!</td><td>不保存直接退出vi</td></tr></tbody></table><p>注意！命令前面的冒号不能少，还有退出后面的叹号也不能少，下面掩饰保存退出：</p><p><img src="https://wsmcb.github.io/img/vi保存退出.jpg" alt="vi保存退出"></p><p>输入完成后按下回车就可以保存退出了。</p><p>下面是vi的一些快捷键，需要退出编辑模式才可用：</p><table><thead><tr><th>快捷键</th><th>说明</th></tr></thead><tbody><tr><td>u</td><td>撤销</td></tr><tr><td>x</td><td>删除</td></tr><tr><td>v</td><td>选择文本</td></tr><tr><td>y</td><td>复制</td></tr><tr><td>yy</td><td>复制光标所在行</td></tr><tr><td>dd</td><td>删除光标所在行</td></tr><tr><td>p</td><td>粘贴</td></tr></tbody></table><p>这里的u就类似windows的编辑器的ctrl + z撤销。x删除光标选中的文字，如果在编辑模式下也可以按退格键删除。按住v移动光标可选择文字，类似于windows编辑器的shift。y可以复制选中的文字。连续按两次y可以复制光标所在行，连续按两次d可以删除光标所在行，p粘贴，类似于windows的ctrl + v。注意！上面说的快捷键需要退出编辑模式才能用。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现简单缩略图</title>
      <link href="/2018/05/14/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BC%A9%E7%95%A5%E5%9B%BE/"/>
      <url>/2018/05/14/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%BC%A9%E7%95%A5%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>在电商网站和社交网站或者新闻网站中，为了更快的加载网页和图片，通常会在商品列表或头像等地方使用缩略图。现在的手机和相机的像素都比较高，1张照片基本都在4M以上，如果每一个地方都加载原图的话，等待所有图片加载完成的时间，估计用户都可以打一局游戏了。而且国内大多数低配的服务器的带宽只有1 – 2M，所以缩小图片体积就显得尤为重要了。<br><a id="more"></a><br>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$fileName = <span class="string">'img/image.jpg'</span>;  <span class="comment">//  文件名</span></span><br><span class="line"></span><br><span class="line">$fileInfo = getimagesize($fileName);  <span class="comment">//  获取图片信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">list</span>($srcW, $srcH) = $fileInfo;  <span class="comment">//  把原始图片的宽度和高度传给单独的变量</span></span><br><span class="line"></span><br><span class="line">$dstW = <span class="number">100</span>;  <span class="comment">//  新画布的宽度</span></span><br><span class="line">$dstH = <span class="number">100</span>;  <span class="comment">//  新画布的高度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  新建画布</span></span><br><span class="line">$dstImage = imagecreatetruecolor($dstW, $dstH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  创建原始图片画布</span></span><br><span class="line">$srcImage = imagecreatefromjpeg($fileName);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  拷贝图片到新画布</span></span><br><span class="line">imagecopyresampled($dstImage, $srcImage, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, $dstW, $dstH, $srcW, $srcH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  保存jpg图片</span></span><br><span class="line">imagejpeg($dstImage, <span class="string">'img/new_image.jpg'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  销毁画布</span></span><br><span class="line">imagedestroy($srcImage);</span><br><span class="line">imagedestroy($dstImage);</span><br></pre></td></tr></table></figure><p>下面是一些函数说明：</p><p><strong>getimagesize(string $fileName)</strong> 获取图片大小，接收一个图片文件名，返回包含图片大小的数组，如果无法获取会返回false，这个函数也可以用来判断是否是真实图片。</p><p><strong>imagecreatetruecolor(int $width, int $height)</strong> 新建一个真彩色图像，接收两个参数，分别是宽度和高度，返回一个图像标识符，代表了一幅大小为 x_size 和 y_size 的黑色图像。</p><p><strong>imagecreatefromjpeg(string $fileName)</strong> 由文件或 URL 创建一个新图象，接收一个文件url，返回一图像标识符，代表了从给定的文件名取得的图像。</p><p><strong>imagecopyresampled(resource $dstImage, resource $srcImage, int $dstX, int $dstY, int $srcX , int $srcY, int $dstW, int $dstH, int $srcW , int $srcH)</strong> 重采样拷贝部分图像并调整大小，这个函数的参数较多，下面是参数说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>dstImage</td><td>resource</td><td>目标图象连接资源</td></tr><tr><td>srcImage</td><td>resource</td><td>源图象连接资源</td></tr><tr><td>dstX</td><td>int</td><td>目标 X 坐标点，也就是粘贴图像的X起始位置</td></tr><tr><td>dstY</td><td>int</td><td>目标 Y 坐标点，也就是粘贴图像的Y起始位置</td></tr><tr><td>srcX</td><td>int</td><td>源的 X 坐标点，也就是拷贝图像的X起始位置</td></tr><tr><td>srcY</td><td>int</td><td>源的 Y 坐标点，也就是拷贝图像的Y起始位置</td></tr><tr><td>dstW</td><td>int</td><td>目标宽度，也就是粘贴图像的宽度</td></tr><tr><td>dstH</td><td>int</td><td>目标高度，也就是粘贴图像的高度</td></tr><tr><td>srcW</td><td>int</td><td>源图象的宽度，也就是拷贝图像的宽度</td></tr><tr><td>srcH</td><td>int</td><td>源图象的高度，也就是拷贝图像的高度</td></tr></tbody></table><p>如果成功会返回true，失败会返回false，</p><p><strong>imagejpeg(resource $image, string $fileName, int $quality)</strong> 输出图象到浏览器或文件，下面是参数说明：</p><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>image</td><td>resource</td><td>由图象创建函数(例如imagecreatetruecolor())返回的图象资源</td></tr><tr><td>fileName</td><td>string</td><td>文件保存的路径，如果未设置或为 NULL，将会直接输出原始图象流，如果要省略这个参数而提供 quality 参数，使用NULL</td></tr><tr><td>quality</td><td>int</td><td>图片质量，范围从 0（最差质量，文件更小）到 100（最佳质量，文件最大）。默认为 IJG 默认的质量值（大约 75）</td></tr></tbody></table><p>成功时返回 true， 或者在失败时返回 false。</p><p><strong>imagedestroy(resource $image)</strong> 释放与 image 关联的内存。image 是由图像创建函数返回的图像标识符，例如 imagecreatetruecolor()。</p><p>这里因为只是简单掩饰，所以新画布的宽度和高度是固定的，如果遇到原图片和新画布的宽高比不一样的话，图片会被强制拉升，如果不想强制拉升图片，又要限制图片的比例的话，可以用javascript来写一个选择图片范围的程序，当用户上传图片的时候在图片上面会有一个方框可以让用户拖拽选择范围，选择完成后在把参数发送到服务器，由PHP根据参数来拷贝图片。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP使用百度翻译API给网站加入翻译功能</title>
      <link href="/2018/05/01/PHP%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91API%E7%BB%99%E7%BD%91%E7%AB%99%E5%8A%A0%E5%85%A5%E7%BF%BB%E8%AF%91%E5%8A%9F%E8%83%BD/"/>
      <url>/2018/05/01/PHP%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91API%E7%BB%99%E7%BD%91%E7%AB%99%E5%8A%A0%E5%85%A5%E7%BF%BB%E8%AF%91%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>百度翻译API是百度为开发者提供的翻译服务，只要在您的网站或APP里调用百度翻译API，您的网站或应用就可以实现翻译功能。对于国际网站来说，翻译功能是必不可少的，向Facebook和Twitter也都有翻译功能，只需点击一下就可以把推文或评论翻译为你使用的语言。而我也把百度翻译加入到了我的图像识别里，OCR识别完成后就可以翻译识别到的文字，如果我想翻译一段不能直接复制粘贴的文字而又不想手动输入的话就可以直接拍照或截图上传，等待OCR识别完成后就可以直接翻译。<br><a id="more"></a><br>百度翻译API分为通用翻译API和定制化翻译API，下面是百度给出的介绍：</p><blockquote><p>通用翻译API支持28种语言互译，覆盖中、英、日、韩、西、法、泰、阿、俄、葡、德、意、荷、芬、丹等；支持28种语言的语言检测。您只需要通过调用通用翻译API，传入待翻译的内容，并指定要翻译的源语言（支持源语言语种自动检测）和目标语言，即可得到相应的翻译结果。任何第三方应用或网站都可以通过使用通用翻译API为用户提供实时优质的多语言翻译服务，提升产品体验。</p><p>定制化翻译API是指在通用翻译模型基础上，基于开发者提供的领域数据，通过自适应技术，快速构建的定制化训练模型。定制化翻译API目前支持中英、英中方向，后续逐步支持其他语言方向。开发者使用定制化翻译API可以更好地与您的应用场景相匹配，获得更好的翻译效果。</p></blockquote><p>这里就以通用翻译API为例，简单说一下百度翻译API的注册和使用</p><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>点击 <a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">百度翻译开放平台</a> 进入百度翻译开放平台来申请服务，</p><p><img src="https://wsmcb.github.io/img/百度翻译开放平台.jpg" alt="百度翻译开放平台"></p><p>点击立即使用，如果没有登录百度账号的话就需要登录百度账号，按照提示填写个人信息，主要就是邮箱和手机号之类的，接着需要填写服务信息，应用或网站名称可以直接填你的网站名称，如果还没有网站的话可以随便填写，例如 翻译，相关网址可以直接填你的域名，如果没有域名的话就直接填服务器IP，网站或应用简介可以随便填，服务器地址可以填你的服务器IP，如果是APP的话可以不用填写，如果填写了服务器地址后就只有填写的服务器IP才能调用百度翻译，填写完成后提交申请，注册完成。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>百度翻译API是通过发送get请求或post请求来调用的，所以只要能发送这两种请求的语言都可以使用百度翻译API，因为我对PHP比较熟，所以这里就用PHP来掩饰。</p><p>下面是请求地址</p><p>通用翻译API HTTP地址：</p><p><a href="http://api.fanyi.baidu.com/api/trans/vip/translate" target="_blank" rel="noopener">http://api.fanyi.baidu.com/api/trans/vip/translate</a></p><p>通用翻译API HTTPS地址：</p><p><a href="https://fanyi-api.baidu.com/api/trans/vip/translate" target="_blank" rel="noopener">https://fanyi-api.baidu.com/api/trans/vip/translate</a></p><p>申请完成后会获得一个 APP ID和密钥，发送翻译请求的时候需要用来验证身份，下面是需要发送的信息：</p><table><thead><tr><th>字段名</th><th>必填参数</th><th>说明</th></tr></thead><tbody><tr><td>q</td><td>是</td><td>请求翻译query，也就是要翻译的内容</td></tr><tr><td>from</td><td>是</td><td>翻译源语言，设置为auto可自动检测</td></tr><tr><td>to</td><td>是</td><td>译文语言，不能设置为auto</td></tr><tr><td>appid</td><td>是</td><td>APP ID，可以在管理控制台查看</td></tr><tr><td>salt</td><td>是</td><td>随机数，随便生成一个随机数就可以</td></tr><tr><td>sign</td><td>是</td><td>签名，appid+q+salt+密钥 的MD5值</td></tr></tbody></table><p>下面就用PHP来掩饰一下：</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APP_ID = <span class="string">'34354646'</span>;  <span class="comment">//  使用常量来保存APP ID</span></span><br><span class="line"><span class="keyword">const</span> KEY = <span class="string">'dfefer343ff'</span>;  <span class="comment">//  使用常量来保存密钥</span></span><br><span class="line"></span><br><span class="line">$query = <span class="string">'Are you ok'</span>;  <span class="comment">//  要翻译的内容</span></span><br><span class="line">$url = <span class="string">'http://api.fanyi.baidu.com/api/trans/vip/translate'</span>;  <span class="comment">//  发送请求的URL</span></span><br><span class="line">$salt = mt_rand(<span class="number">11111111</span>, <span class="number">99999999</span>);  <span class="comment">//  随机数</span></span><br><span class="line">$sign = APP_ID . $query . $salt . KEY;  <span class="comment">//  APPID+翻译内容+随机数+密钥</span></span><br><span class="line">$sign = md5($sign);  <span class="comment">//  md5加密，生成签名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  下面是url拼接</span></span><br><span class="line">$url = $url . <span class="string">'?q='</span> . urlencode($query) . <span class="string">'&amp;from=auto&amp;to=zh&amp;appid='</span> . APP_ID . <span class="string">'&amp;salt='</span> . $salt . <span class="string">'&amp;sign='</span> . $sign;</span><br><span class="line"></span><br><span class="line">$data = file_get_contents($url);  <span class="comment">//  发送get请求</span></span><br></pre></td></tr></table></figure><p>上面把Are you ok翻译为中文，mt_rand用来生成随机数的函数，我把翻译源语言设置为auto，译文语言设置为中文，为了方便 使用的是GET方式提交，如果需要翻译的内容比较长的话可以使用POST方式提交，关于PHP发送POST可以看 <a href="http://www.changbin.me/index.php/2019/02/19/php%e5%8f%91%e9%80%81get%e5%92%8cpost%e8%af%b7%e6%b1%82/" target="_blank" rel="noopener">PHP发送GET和POST请求</a>。</p><p>翻译源语言和译文语言需要使用语言简写，下面是语言简写：</p><table><thead><tr><th>语言简写</th><th>名称</th></tr></thead><tbody><tr><td>auto</td><td>自动检测</td></tr><tr><td>zh</td><td>中文</td></tr><tr><td>en</td><td>英语</td></tr><tr><td>yue</td><td>粤语</td></tr><tr><td>wyw</td><td>文言文</td></tr><tr><td>jp</td><td>日语</td></tr><tr><td>fra</td><td>法语</td></tr><tr><td>spa</td><td>西班牙语</td></tr><tr><td>th</td><td>泰语</td></tr><tr><td>ara</td><td>阿拉伯语</td></tr><tr><td>ru</td><td>俄语</td></tr><tr><td>pt</td><td>葡萄牙语</td></tr><tr><td>de</td><td>德语</td></tr><tr><td>it</td><td>意大利语</td></tr><tr><td>el</td><td>希腊语</td></tr><tr><td>nl</td><td>荷兰语</td></tr><tr><td>pl</td><td>波兰语</td></tr><tr><td>bul</td><td>保加利亚语</td></tr><tr><td>est</td><td>爱沙尼亚语</td></tr><tr><td>dan</td><td>丹麦语</td></tr><tr><td>fin</td><td>芬兰语</td></tr><tr><td>cs</td><td>捷克语</td></tr><tr><td>rom</td><td>罗马尼亚语</td></tr><tr><td>slo</td><td>斯洛文尼亚语</td></tr><tr><td>swe</td><td>瑞典语</td></tr><tr><td>hu</td><td>匈牙利语</td></tr><tr><td>cht</td><td>繁体中文</td></tr><tr><td>vie</td><td>越南语</td></tr></tbody></table><p>翻译完成后会返回一个JSON数据，下面是参数说明：</p><table><thead><tr><th>字段名</th><th>描述</th></tr></thead><tbody><tr><td>from</td><td>翻译源语言</td></tr><tr><td>to</td><td>译文语言</td></tr><tr><td>trans_result</td><td>翻译结果，trans_result里包含原文和译文</td></tr><tr><td>src</td><td>原文</td></tr><tr><td>dst</td><td>译文</td></tr></tbody></table><p>下面是返回的JSON：</p><p>JSON</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"from"</span>: <span class="string">"en"</span>,</span><br><span class="line">    <span class="attr">"to"</span>: <span class="string">"zh"</span>,</span><br><span class="line">    <span class="attr">"trans_result"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"src"</span>: <span class="string">"Are you ok"</span>,</span><br><span class="line">            <span class="attr">"dst"</span>: <span class="string">"你还好吗？"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为这个JSON只是一个字符串，如果要操作的话需要转换为PHP对象，有关PHP操作JSON的方法可以看 <a href="http://www.machangbin.com/index.php/2018/04/09/php%e6%93%8d%e4%bd%9cjson%e6%a0%bc%e5%bc%8f%e6%95%b0%e6%8d%ae/" target="_blank" rel="noopener">PHP操作JSON格式数据</a> 。</p><p>如果翻译发生错误也会返回一个JSON，其中就包含错误码，下面是错误码说明：</p><table><thead><tr><th>错误码</th><th>含义</th><th>解决方法</th></tr></thead><tbody><tr><td>52000</td><td>成功</td><td></td></tr><tr><td>52001</td><td>请求超时</td><td>重试</td></tr><tr><td>52002</td><td>系统错误</td><td>重试</td></tr><tr><td>52003</td><td>未授权用户</td><td>检查您的 appid 是否正确，或者服务是否开通</td></tr><tr><td>54000</td><td>必填参数为空</td><td>检查是否少传参数</td></tr><tr><td>54001</td><td>签名错误</td><td>请检查您的签名生成方法</td></tr><tr><td>54003</td><td>访问频率受限</td><td>请降低您的调用频率</td></tr><tr><td>54004</td><td>账户余额不足</td><td>请前往管理控制平台为账户充值</td></tr><tr><td>54005</td><td>长query请求频繁</td><td>请降低长query的发送频率，3s后再试</td></tr><tr><td>58000</td><td>客户端IP非法</td><td>检查个人资料里填写的 IP地址 是否正确，可前往管理控制平台修改</td></tr><tr><td>58001</td><td>译文语言方向不支持</td><td>检查译文语言是否在语言列表里</td></tr></tbody></table><p>下面是请求发生错误时返回的JSON：</p><p>JSON</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"error_code"</span>: <span class="string">"58000"</span>,</span><br><span class="line">    <span class="attr">"error_msg"</span>: <span class="string">"INVALID_CLIENT_IP"</span>,</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"client_ip"</span>: <span class="string">"38.128.114.146"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据错误码来定位错误，客户端IP非法。</p><h2 id="价格说明"><a href="#价格说明" class="headerlink" title="价格说明"></a>价格说明</h2><p>通用翻译API每月提供200万字符免费额度，超出后需要按照字符数收费。</p><p>当月翻译字符数≤200万，当月免费。</p><p>超过200万字符，按照49元人民币/百万字符，支付当月全部翻译字符数费用。</p><p>字符数以翻译的源语言字符长度为标准计算。一个汉字，英文字母，标点符号等，均计为一个字符。注：空格、html标签等均计入在内。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery AJAX简单使用教程</title>
      <link href="/2018/04/24/jQuery-AJAX%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/04/24/jQuery-AJAX%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>在上一篇文章AJAX简单使用教程 中，我写了原生AJAX的使用，但是编写常规的 AJAX 代码并不容易，因为不同的浏览器对 AJAX 的实现并不相同。这意味着您必须编写额外的代码对浏览器进行测试。不过，jQuery 团队为我们解决了这个难题，我们只需要一行简单的代码，就可以实现 AJAX 功能。<br><a id="more"></a><br>有关AJAX的介绍可以参考我的上一篇文章：<a href="http://www.machangbin.com/index.php/2018/04/17/ajax%e7%ae%80%e5%8d%95%e4%bd%bf%e7%94%a8%e6%95%99%e7%a8%8b/" target="_blank" rel="noopener">AJAX简单使用教程</a> 。</p><p>jQuery提供了多种使用AJAX的方法，下面就来简单的说一下这些方法的使用。</p><h2 id="get-方法"><a href="#get-方法" class="headerlink" title="get() 方法"></a>get() 方法</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  通过get方式请求</span></span><br><span class="line">$.<span class="keyword">get</span>("server.php", 'userName=12346',</span><br><span class="line">    function (response , textStatus, jqXHR) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);  <span class="comment">//  在控制台输出请求到的数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(data));  <span class="comment">//  在控制台输出数据类型</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"json"</span>  <span class="comment">//  设置返回的数据类型</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>这是一个简单的 GET 请求功能以取代复杂 $.ajax 。请求成功时可调用回调函数。如果需要在出错时执行函数，请使用 $.ajax。</p><p>下面是参数说明：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>设置要请求的文件的url地址</td></tr><tr><td>data</td><td>要发送的数据，数据格式为 参数名=参数值，多条数据之间用&amp;分隔</td></tr><tr><td>success</td><td>请求成功后要执行的函数，这个函数会返回3条数据 ，response：请求返回的数据，status：请求的状态，jqXHR XMLHttpRequest 对象</td></tr><tr><td>dataType</td><td>预计服务器返回的数据类型，如果您不确定服务器返回的数据类型，此参数可以省略，下面是可以设置的类型：xml、html、json、text、script</td></tr></tbody></table><p>特别说明：这里的dataType参数可以根据设置的参数自动转换返回的数据类型，例如我设置dateType参数为json，jQuery就会把请求返回的数据自动转换为JSON对象，如果我设置为script，就会自动执行请求返回的JavaScript代码。</p><h2 id="post-方法"><a href="#post-方法" class="headerlink" title="post() 方法"></a>post() 方法</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  使用POST方式请求</span></span><br><span class="line">$.post(<span class="string">"server.php"</span>, <span class="string">'userName=123456'</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">data, textStatus, jqXHR</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);  <span class="comment">//  在控制台输出数据</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>最简单的发送post请求，连请求头都可以不用设置，参数和返回内容和get方法是一样的。</p><h2 id="getJSON-方法"><a href="#getJSON-方法" class="headerlink" title="getJSON() 方法"></a>getJSON() 方法</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">"server.php"</span>, <span class="string">'email=123@gmail.com'</span>,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">data, textStatus, jqXHR</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);  <span class="comment">//  在控制台输出请求到的JSON数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(textStatus);  <span class="comment">//  在控制台输出状态</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">typeof</span>(data));  <span class="comment">//  在控制台输出数据类型</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>getJSON方法可以通过Ajax异步请求的方式，获取服务器中的数据，并对获取的数据进行解析，也就是说返回的JSON数据可以直接使用，无需手动转换，参数基本和上面的get和post差不多，但可以直接返回JSON数据，所以不需要设置dataType参数。</p><h2 id="getScript-方法"><a href="#getScript-方法" class="headerlink" title="getScript() 方法"></a>getScript() 方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  请求一个JS文件，并且自动执行请求到的JS代码</span></span><br><span class="line">$.getScript(<span class="string">"getJSON.js"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">script, textStatus, jqXHR</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(script);  <span class="comment">//  在控制台输出一下请求到的JS代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>getScript可以通过get方式从服务器请求JS代码，并且可以自动执行请求到的JS代码，参数和上面的getJSON是一样的，无需设置dataType。</p><h2 id="ajax-方法"><a href="#ajax-方法" class="headerlink" title="ajax() 方法"></a>ajax() 方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">"get"</span>,  <span class="comment">//  请求方式 post或get</span></span><br><span class="line">    url: <span class="string">"server1.php"</span>,  <span class="comment">//  要请求的url</span></span><br><span class="line">    data: <span class="string">"data=hello"</span>,  <span class="comment">//  要发送的数据</span></span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>,  <span class="comment">//  是否是异步请求，默认为true</span></span><br><span class="line">    dataType: <span class="string">"text"</span>,  <span class="comment">//  预计服务器返回的数据类型</span></span><br><span class="line">    timeout: <span class="number">3000</span>,  <span class="comment">//  请求超时时间 毫秒</span></span><br><span class="line">    cache: <span class="literal">false</span>,  <span class="comment">//  是否从浏览器缓存中加载请求信息，默认为true</span></span><br><span class="line">    global: <span class="literal">false</span>,  <span class="comment">//  是否触发全局ajax事件</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data , status</span>) </span>&#123;  <span class="comment">//  请求成功时调用的函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(data);  <span class="comment">//  在控制台输出数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(status);  <span class="comment">//  在控制台输出状态</span></span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, error, abnormal</span>) </span>&#123;  <span class="comment">//  请求失败时调用的函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(error);  <span class="comment">//  输出错误信息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>发送ajax请求，这个方法可自定义的参数较多，此方法接收一个JSON对象，下面是JSON参数说明：</p><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>type</td><td>string</td><td>请求方式，get或post</td></tr><tr><td>url</td><td>string</td><td>要请求的url</td></tr><tr><td>data</td><td>string</td><td>要发送的数据，格式为 参数名=参数值</td></tr><tr><td>async</td><td>boolean</td><td>是否是异步请求，默认为true</td></tr><tr><td>dataType</td><td>string</td><td>预计服务器返回的数据类型，jQuery会根据此设置自动转换数据类型，下面是可设置的类型：xml、html、json、text、script</td></tr><tr><td>timeout</td><td>number</td><td>请求超时时间 毫秒</td></tr><tr><td>cache</td><td>boolean</td><td>是否从浏览器缓存中加载请求信息，默认为true</td></tr><tr><td>global</td><td>boolean</td><td>是否触发全局 AJAX 事件。设置为 false 将不会触发全局 AJAX 事件，如 ajaxStart 或 ajaxStop 。可用于控制不同的Ajax事件，默认为true</td></tr><tr><td>ifModified</td><td>boolean</td><td>仅在服务器数据改变时获取新数据。使用 HTTP 包 Last-Modified 头信息判断，默认为false</td></tr><tr><td>beforeSend</td><td>function</td><td>发送请求前可修改 XMLHttpRequest 对象的函数，如添加自定义 HTTP 头</td></tr><tr><td>complete</td><td>function</td><td>请求完成后回调函数 (请求成功或失败时均调用)。参数： XMLHttpRequest 对象，成功信息字符串</td></tr><tr><td>success</td><td>function</td><td>请求成功后回调函数。这个方法有两个参数：服务器返回数据，返回状态</td></tr><tr><td>error</td><td>function</td><td>请求失败时调用的函数，这个函数有三个参数：XMLHttpRequest 对象，错误信息，（可能）捕获的错误对象。</td></tr></tbody></table><p>上面就是ajax方法的参数，如果没有特殊需要的话不必每个参数都写。</p><h2 id="ajaxSetup-方法"><a href="#ajaxSetup-方法" class="headerlink" title="ajaxSetup() 方法"></a>ajaxSetup() 方法</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$.ajaxSetup(&#123;</span><br><span class="line">    url: <span class="string">"server.php"</span>,  <span class="comment">//  设置url</span></span><br><span class="line">    type: <span class="string">"get"</span>,  <span class="comment">//  请求类型 get或post</span></span><br><span class="line">    data: <span class="string">"Hello PHP"</span>,  <span class="comment">//  要发送的数据</span></span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>,  <span class="comment">//  是否是异步请求</span></span><br><span class="line">    dataType: <span class="string">"json"</span>,  <span class="comment">//  预计服务器返回的数据类型</span></span><br><span class="line">    timeout: <span class="number">3000</span>,  <span class="comment">//  请求超时时间 毫秒</span></span><br><span class="line">    cache: <span class="literal">false</span>,  <span class="comment">//  是否从浏览器缓存中加载请求信息，默认为true</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data , status</span>) </span>&#123;  <span class="comment">//  请求成功时的回掉函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(data);  <span class="comment">//  在控制台输出数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(status);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params">xhr, error, abnormal</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);  <span class="comment">//  在控制台输出错误信息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$.ajax();  <span class="comment">//  设置完成后调用ajax方法就不需要重新设置了</span></span><br></pre></td></tr></table></figure><p>ajaxSetup方法可以设置Ajax请求的一些全局性参数，设置完成后，后面的Ajax请求将不需要再添加这些参数，使用ajax设置的参数会覆盖ajaxSetup设置的参数，这个方法也是需要传入一个JSON对象，具体的JSON参数可参考上面的ajax参数。</p><h2 id="ajaxStart-和-ajaxStop-方法"><a href="#ajaxStart-和-ajaxStop-方法" class="headerlink" title="ajaxStart() 和 ajaxStop() 方法"></a>ajaxStart() 和 ajaxStop() 方法</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ajaxStart(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  <span class="comment">//  ajax请求开始前</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'正在发送请求'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ajaxStop(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  <span class="comment">//  ajax请求完成后</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'请求完成'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  发送一个get请求</span></span><br><span class="line">$.<span class="keyword">get</span>("server.php", 'data=123',</span><br><span class="line">    function (data, textStatus, jqXHR) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>ajaxStart方法用来设置ajax开始请求前要执行的函数，ajaxStop方法用来设置ajax请求完成后要执行的函数，ajaxStart方法和ajaxStop方法需要绑定在document上，只要执行ajax请求就会触发。这两个方法常被用来设置按钮显示的名称或加载动画。</p><p>上面就是jQuery常用的ajax方法，新版jQuery已删除的方法这里就没有写了。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJAX </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX简单使用教程</title>
      <link href="/2018/04/17/AJAX%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/04/17/AJAX%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>AJAX 是一种用于创建快速动态网页的技术。<br>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页要更新内容只能重新加载整个页面。<br><a id="more"></a><br>因为无需刷新页面就能和后端进行数据传输，所以AJAX的出现极大的改善了用户体验，例如在使用搜索引擎搜索内容的时候只需要输入一部分关键词无需提交，搜索引擎就会根据你输入的内容来提供相应的搜索建议，又或者是在用户注册的时候输入完手机号或邮箱地址，后台就会判断输入的手机号或邮箱地址是否被注册过，无需重新加载整个网页，减小了数据的传输量，节省了时间。</p><p>下面是一个简单的AJAX</p><h2 id="get方式"><a href="#get方式" class="headerlink" title="get方式"></a>get方式</h2><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  创建XMLHttpRequest对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">//  设置提交方式，url，是否异步</span></span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'server.php'</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">//  提交</span></span><br><span class="line">xhr.send();</span><br><span class="line"></span><br><span class="line"><span class="comment">//  每当 readyState 改变时，就会触发 onreadystatechange 事件</span></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//  根据XMLHttpRequest的状态值来判断是否成功获取数据</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="comment">//  根据HTTP状态码来判断是否有错误</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">//  在控制台输出获取的内容</span></span><br><span class="line">            <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//  输出HTTP错误码</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'出错了，错误代码'</span> + xhr.status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>XMLHttpRequest 对象</strong> 提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。XMLHttpRequest 可以同步或异步地返回 Web 服务器的响应，并且能够以文本或者一个 DOM 文档的形式返回内容。</p><p>XMLHttpRequest对象需要IE7以上的浏览器才能使用，不过现在已经是2018年了，已经很少会有人用IE6了，国内的XP用户也大多会用360或QQ这一类的浏览器，这些浏览器大多是Chrome内核的，所以不用太担心兼容性问题。</p><p><strong>open(method, url, async, username, password) 方法</strong> 初始化 HTTP 请求参数，例如 URL 和 HTTP 方法，但是并不发送请求。</p><p>参数说明：</p><ol><li>method 请求方式，get或post</li><li>url 要请求的url</li><li>async 是否异步 如果为true在等待服务器响应的时候，后面的JS代码可以继续执行，如果为false等待服务器响应的这段时间，后面的JS代码不会执行</li><li>username 如果后台启用了身份验证就需要设置用户名</li><li>password 如果后台启用了身份验证就需要设置密码</li></ol><p>如果使用get方式请求，数据就需要写在url的后面，格式和超链接发送数据的格式是一样的，? + 参数名= + 数据，多条数据之间用&amp;分隔，</p><p>例如我要给server.php发送用户名和密码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.php?userName=123456&amp;password=123456</span><br></pre></td></tr></table></figure><p>注意！这里的get方式和表单的get是一样的，参数名和数据都是可见的，所以不建议用get方式来发送密码，而且get允许的数据量笔post小，不能发送太多内容。</p><p><strong>send(body) 方法</strong> 发送HTTP请求，如果为post方式就需要填写发送数据，如果是get方式可省略参数。</p><p><strong>onreadystatechange 事件</strong> 每当 readyState 改变时，就会触发此事件。</p><p><strong>readyState 属性</strong> HTTP 请求的状态.当一个 XMLHttpRequest 初次创建时，这个属性的值从 0 开始，直到接收到完整的 HTTP 响应，这个值增加到 4。</p><p>下面是readyState状态值的详细说明：</p><table><thead><tr><th>状态值</th><th>说明</th></tr></thead><tbody><tr><td>0</td><td>初始化状态。XMLHttpRequest 对象已创建或已被 abort() 方法重置。</td></tr><tr><td>1</td><td>open() 方法已调用，但是 send() 方法未调用。请求还没有被发送。</td></tr><tr><td>2</td><td>Send() 方法已调用，HTTP 请求已发送到 Web 服务器。未接收到响应。</td></tr><tr><td>3</td><td>所有响应头部都已经接收到。响应体开始接收但未完成。</td></tr><tr><td>4</td><td>HTTP 响应已经完全接收。</td></tr></tbody></table><p><strong>status 属性</strong> 由服务器返回的 HTTP 状态代码，如 200 表示成功，而 404 表示 “Not Found” 错误。当 readyState 小于 3 的时候读取这一属性会导致一个异常。更详细的HTTP状态码可在百度上查询。</p><p><strong>responseText 属性</strong> 接收到的数据，如果readyState为3，responseText为空字符串。</p><p>上面就是通过get方式发送AJAX请求。</p><h2 id="post方式"><a href="#post方式" class="headerlink" title="post方式"></a>post方式</h2><p>下面是通过post方式发送AJAX请求：</p><p>代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  创建XMLHttpRequest对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">//  设置提交方式，url，是否异步</span></span><br><span class="line">xhr.open(<span class="string">'post'</span>, <span class="string">'server.php'</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="comment">//  设置请求头</span></span><br><span class="line">xhr.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line"><span class="comment">//  提交</span></span><br><span class="line">xhr.send(<span class="string">'userName=123456&amp;password=123456'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//  每当 readyState 改变时，就会触发 onreadystatechange 事件</span></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//  根据XMLHttpRequest的状态来判断是否成功获取数据</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="comment">//  根据HTTP状态码来判断是否有错误</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">//  在控制台输出获取的内容</span></span><br><span class="line">            <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//  输出HTTP错误码</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'出错了，错误代码'</span> + xhr.status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post方式和get方式的区别不是太大，post方式open的第一个参数要设置为post。</p><p>post方式的发送数据不再是写在url后面，而是写在send方法里，通过post发送数据还需要设置请求头。</p><p><strong>setRequestHeader(name, value) 方法</strong> 设置HTTP请求的头部，它应该包含在通过后续 send() 调用而发布的请求中。这个方法只有当 readyState 为 1 的时候才能调用，例如，在调用了 open() 之后，但在调用 send() 之前。</p><p>上面就是通过post方式发送请求，post方式的安全性比起get来说要高一些，而且可传输的数据量也要更大。</p><p>以上就是AJAX的使用方法，如果用jQuery的话会更简单。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJAX </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP操作JSON格式数据</title>
      <link href="/2018/04/09/PHP%E6%93%8D%E4%BD%9CJSON%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE/"/>
      <url>/2018/04/09/PHP%E6%93%8D%E4%BD%9CJSON%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式。它基于 ECMAScript (w3c制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。<br><a id="more"></a><br>想要用PHP操作JSON就离不开下面两个函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">json_decode();  <span class="comment">//  对JSON格式的字符串进行解码</span></span><br><span class="line">json_encode();  <span class="comment">//  对变量进行 JSON 编码</span></span><br></pre></td></tr></table></figure><p>这里先说 json_decode 对JSON格式的字符串进行解码，前端上传的JSON数据对于PHP来说就是字符串，json_decode 可以把JSON字符串转换为PHP对象，</p><p>下面是一个PHP写的JSON字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$json = <span class="string">'&#123;"user": "Administrator", "password": "123456"&#125;'</span>;</span><br></pre></td></tr></table></figure><p>如果不经过转换是不能直接操作的，即使用正则表达式也很难，如果直接输出的话还是一样的字符串</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"user"</span>: <span class="string">"Administrator"</span>, <span class="attr">"password"</span>: <span class="string">"123456"</span>&#125;</span><br></pre></td></tr></table></figure><p>这里就需要用到 json_decode来转换 需要传入要转换的JSON字符串，返回转换后的PHP对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$json = <span class="string">'&#123;"user": "Administrator", "password": "123456"&#125;'</span>;  <span class="comment">//  JSON字符串</span></span><br><span class="line">$json = json_decode($json);  <span class="comment">//  JSON字符串解码</span></span><br></pre></td></tr></table></figure><p>现在就可以操作这个JSON对象了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $json-&gt;user;  <span class="comment">//  输出用户</span></span><br><span class="line"><span class="keyword">echo</span> $json-&gt;password;  <span class="comment">//  输出密码</span></span><br></pre></td></tr></table></figure><p>这是一个很简单的JSON数据，JSON数据是可以包含数组和多层嵌套的，</p><p>下面是一个稍微有点难度的JSON数据：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"user"</span>: <span class="string">"Administrator"</span>,</span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"123456"</span>,</span><br><span class="line">    <span class="attr">"phone_num"</span>: [</span><br><span class="line">        <span class="string">"13011112222"</span>,</span><br><span class="line">        <span class="string">"15522222222"</span>,</span><br><span class="line">        <span class="string">"13988888888"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"friends"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"马云"</span>,</span><br><span class="line">            <span class="attr">"age"</span>: <span class="string">"54"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"马化腾"</span>,</span><br><span class="line">            <span class="attr">"age"</span>: <span class="string">"47"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"李彦宏"</span>,</span><br><span class="line">            <span class="attr">"age"</span>: <span class="string">"50"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $json-&gt;user;  <span class="comment">//  输出用户</span></span><br><span class="line"><span class="keyword">echo</span> $json-&gt;password;  <span class="comment">//  输出密码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i &lt; count($json-&gt;phone_num);$i ++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $json-&gt;phone_num[$i];  <span class="comment">//  输出手机号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; count($json-&gt;friends);$i ++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $json-&gt;friends[$i]-&gt;name;  <span class="comment">//  输出好友名字</span></span><br><span class="line">    <span class="keyword">echo</span> $json-&gt;friends[$i]-&gt;age;  <span class="comment">//  输出好友年龄</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JSON的字段名和值用冒号分隔，数组写在方括号里，对象写在花括号里，JSON对象里可以包含数组，数组里也可以包含JSON对象，只要知道了JSON的语法结构，无论在复杂的JSON数据也能迎刃而解。</p><p>最后来说一下 json_encode 对PHP变量进行JSON编码，也就是把PHP变量或对象转换为JSON字符串，常用于输出数据给前端。通常情况下在数据库查询出数据后为了便于操作都会把数据转换为PHP数组，可以直接输出到页面，但如果前端使用AJAX请求的话就不能直接输出数组了，这时候就需要用 json_encode 把数组转换为JSON字符串，方便前端解析。</p><p>下面是一个PHP数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">    <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"name"</span> =&gt; <span class="string">"小明"</span>,</span><br><span class="line">        <span class="string">"age"</span> =&gt; <span class="number">10</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"name"</span> =&gt; <span class="string">"小强"</span>,</span><br><span class="line">        <span class="string">"age"</span> =&gt; <span class="number">8</span></span><br><span class="line">    ),</span><br><span class="line">    <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">"name"</span> =&gt; <span class="string">"小李"</span>,</span><br><span class="line">        <span class="string">"age"</span> =&gt; <span class="number">10</span></span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>如果直接用 print_r输出的话前端是不能解析的，这里使用 json_encode对数组进行编码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$data = json_encode($data);</span><br></pre></td></tr></table></figure><p>传入要编码的PHP变量或对象，返回编码后的JSON字符串，下面是经过JSON编码后的效果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"小明"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">10</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"小强"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">8</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"小李"</span>,</span><br><span class="line">        <span class="attr">"age"</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>前端收到这个JSON字符串后在把这个字符串转换为JSON对象就可以使用了。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Linux VPS + Transmission搭建离线下载服务器</title>
      <link href="/2018/04/05/%E4%BD%BF%E7%94%A8Linux-VPS-Transmission%E6%90%AD%E5%BB%BA%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2018/04/05/%E4%BD%BF%E7%94%A8Linux-VPS-Transmission%E6%90%AD%E5%BB%BA%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>最近我的百度网盘超级会员就要到期了，对于百度网盘来说，不开超级会员基本是没法用的，虽然离线下载功能不开会员也可以用，但如果想把文件从网盘下载到电脑就必须要超级会员。而迅雷基本上也没法用了，尤其是被举报的资源，即使开了会员也不能下载。正好手里有台VPS服务器，每月5美元的价格如果只用来搭网站和SS的话就有点浪费了，为了让这台VPS能发挥出更大的价值，我用Transmission搭建了离线下载服务器，自己搭建离线下载功能有以下几点好处，<br><a id="more"></a></p><ol><li>无需担心资源类型，只要网上能找到的资源都可以下载，国内服务器除外，</li><li>下载的文件放在服务器不会被和谐，国内服务器除外，</li></ol><p>缺点也有，那就是一般的VPS的硬盘空间都不大，我的每月5美元的VPS也只有25G的硬盘，所以不能在服务器存太多文件，如果是电影的话建议看完就可以删了，不要留在服务器里，</p><p>下面是我的安装过程</p><p>先用远程工具连接服务器，我使用的Linux版本是CentOS6，</p><p>输入下面的命令来安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install transmission transmission-daemon</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/搭建离线下载1.jpg" alt="下载安装"></p><p>接下来会显示软件大小，然后询问是否继续，输入y继续安装</p><p><img src="https://wsmcb.github.io/img/搭建离线下载2.jpg" alt="询问是否继续"></p><p>等待一段时间，安装完成后启动Transmission-daemon服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service transmission-daemon start</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/搭建离线下载3.jpg" alt="启动服务"></p><p>第一次启动服务后会生成一个配置文件，接下来就是更改配置文件，配置文件是JSON格式的，大多数程序员应该都能看懂，不过要更改配置文件需要先停止Transmission-daemon服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service transmission-daemon stop</span><br></pre></td></tr></table></figure><p><img src="https://wsmcb.github.io/img/搭建离线下载4.jpg" alt="停止服务"></p><p>配置文件的位置在/var/lib/transmission/settings.json，可以用vi等工具编辑，主要要修改的有以下几项：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"rpc-whitelist-enabled": "false"</span><br></pre></td></tr></table></figure><p>这是白名单验证，只有设置过的IP才可以访问，建议设置为false</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"rpc-authentication-required": "true",</span><br><span class="line">"rpc-password": "设置用户名",</span><br><span class="line">"rpc-username": "设置密码"</span><br></pre></td></tr></table></figure><p>上面的3项分别是：</p><ol><li>启用用户名和密码的验证，建议设置为true，虽然这个离线下载页面一般不会有其他人访问，但还是建议开启用户名和密码验证，</li><li>设置登录的用户名，</li><li>设置登录的密码，</li></ol><p>除了上面说到的设置项外还可以设置端口和下载路径等，设置完成后保存，然后启动Transmission-daemon服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service transmission-daemon start</span><br></pre></td></tr></table></figure><p>这个软件可以通过web页面来新建下载任务，访问下载页面的方式是IP + 端口号，如果有域名的话也可以使用域名 + 端口号，或者设置反向代理也可以，IP + 端口号的格式是127.0.0.1:9091，这里的IP只是随便写的，默认的端口号是9091，也可以在配置文件里更改端口号，注意！修改设置文件需要先停止服务。</p><p>离线下载页面</p><p><img src="https://wsmcb.github.io/img/离线下载页面.jpg" alt="离线下载页面"></p><p>输入设置的用户名和密码，如果没有启用用户名和密码验证的话直接就可以进入下载页面，</p><p>下载页面</p><p><img src="https://wsmcb.github.io/img/离线下载页面2.jpg" alt="离线下载页面2"></p><p>点击Open新建任务，可以上传种子文件和输入磁力链接，</p><p><img src="https://wsmcb.github.io/img/新建任务.jpg" alt="新建任务"></p><p>点击Upload开始下载，默认的下载路径是/var/lib/transmission/Downloads，如果要把文件从服务器下载到本地可以使用FTP工具，推荐使用Xftp 5这个软件，或者也可以搭建一个Web服务器，把下载路径设置到Web目录，这样如果是视频或音频的话就可以在线观看了。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库导入和导出</title>
      <link href="/2018/04/02/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BA/"/>
      <url>/2018/04/02/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p>对于站长来说可能会遇到需要完整迁移网站的情况，而和网站相关的数据库也必须要一起迁移，这里就来说一下Mysql数据库的简单导入和导出。<br><a id="more"></a></p><h2 id="在Linux下导出数据库"><a href="#在Linux下导出数据库" class="headerlink" title="在Linux下导出数据库"></a>在Linux下导出数据库</h2><p>完整语句</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -h198.13.60.124 -P3306 -proot wordpress  &gt; /home/wordpress.sql</span><br></pre></td></tr></table></figure><p>这里我导出了一个名为wordpress的数据库，下面是参数说明：</p><ul><li>mysqldump mysqldump是Mysql用于导出数据库的程序</li><li>-u -u后面紧跟用户名</li><li>-h -h后面紧跟服务器地址，如果是在本地或使用Linux远程工具操作可不写-h参数</li><li>-P -P后面紧跟端口号，如果是本地或Linux远程工具操作也可以不写-P参数</li><li>-p -p后面紧跟数据库密码，如果没有密码-p后面可空</li><li>这里的wordpress是我要导出数据库的名称</li><li>/home/wordpress.sql是导出保存的文件路径和文件名</li></ul><p>上面就是在Linux下导出数据库的方法。</p><h2 id="在Linux下导入数据库"><a href="#在Linux下导入数据库" class="headerlink" title="在Linux下导入数据库"></a>在Linux下导入数据库</h2><p>导入数据库也比较简单，先连接数据库</p><p><img src="https://wsmcb.github.io/img/连接数据库.jpg" alt="连接数据库"></p><p>连接数据库后选择你要导入到哪个数据库，还是用use语句，选择完成后输入导入的SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SOURCE /home/wordpress.sql</span><br></pre></td></tr></table></figure><p>SOURCE是导入数据库资源的语句，/home/wordpress.sql是文件路径和文件名，</p><p>当看到如下提示的时候说明导入成功，</p><p><img src="https://wsmcb.github.io/img/mysql导入完成.jpg" alt="mysql导入完成"></p><p>这里的行数是根据你的数据量显示的，</p><p>上面就是Linux导入数据库的方法。</p><h2 id="Windows下导出数据库"><a href="#Windows下导出数据库" class="headerlink" title="Windows下导出数据库"></a>Windows下导出数据库</h2><p>方法和Linux的差不多，下面是语句</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -h127.0.0.1 -P3306 -proot message_board &gt; D:\message_board.sql</span><br></pre></td></tr></table></figure><p>具体的参数说明可参考上面Linux的，在本地操作可省略服务器地址和端口号，</p><p>上面就是Windows导出数据库的方法。</p><h2 id="Windows导入数据库"><a href="#Windows导入数据库" class="headerlink" title="Windows导入数据库"></a>Windows导入数据库</h2><p>方法还是和Linux的差不多，先连接数据库，然后在选择数据库，然后输入SQL语句，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SOURCE D:\message_board.sql</span><br></pre></td></tr></table></figure><p>只有文件路径不同，</p><p><img src="https://wsmcb.github.io/img/win导入数据库.jpg" alt="win导入数据库"></p><p>导入完成，</p><p><img src="https://wsmcb.github.io/img/win导入成功.jpg" alt="win导入成功"></p><p>上面就是Windows导入数据库的方法。</p><p>除了上面的方法外也可以使用数据库管理工具来导入导出，例如JetBrains DataGrip和phpMyAdmin都可以导入和导出数据库，不过一般的虚拟主机都只能使用phpMyAdmin来管理数据库，这里就来说一下phpMyAdmin导入和导出数据库。</p><p>phpMyAdmin导出数据库</p><p>进入phpMyAdmin后进入你要导出的数据库，点击导出</p><p><img src="https://wsmcb.github.io/img/php导出数据库.jpg" alt="php导出数据库"></p><p>参数可以不用改，直接点击 “执行” 选择文件夹就可以导出了，</p><p><img src="https://wsmcb.github.io/img/php执行导出.jpg" alt="php执行导出"></p><p>phpMyAdmin导出很简单，不用写命令。</p><h2 id="phpMyAdmin导入数据库"><a href="#phpMyAdmin导入数据库" class="headerlink" title="phpMyAdmin导入数据库"></a>phpMyAdmin导入数据库</h2><p>进入phpMyAdmin后在进入你要导入到的数据库，点击 “导入，</p><p><img src="https://wsmcb.github.io/img/PHP导入.jpg" alt="PHP导入"></p><p>先选择文件，然后点击 “执行”，</p><p><img src="https://wsmcb.github.io/img/php导入执行.jpg" alt="php导入执行"></p><p>导入完成</p><p><img src="https://wsmcb.github.io/img/php导入完成.jpg" alt="php导入完成"></p><p>注意！如果数据库文件无法上传的话可以检查一下PHP的配置文件，看一下数据库文件大小是否超出PHP配置文件设置的 最大允许上传文件的大小，这里说的是自己搭建服务器的站长，如果是虚拟主机的话，一般虚拟主机设置的都会比较大，而且虚拟主机也不能修改PHP配置文件。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10配置Mysql和PHP的环境变量</title>
      <link href="/2018/03/22/Win10%E9%85%8D%E7%BD%AEMysql%E5%92%8CPHP%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2018/03/22/Win10%E9%85%8D%E7%BD%AEMysql%E5%92%8CPHP%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<p>如果你想在CMD命令行运行MYSQL或PHP就需要配置环境变量，在命令行运行PHP无需依赖服务器环境。<br><a id="more"></a><br>MYSQL配置方法：</p><p>打开你的MYSQL安装目录，因为我这里用的是WAMP集成环境，所以我的MYSQL安装位置是”D:\phpStudy\MySQL”，进入MYSQL安装目录后在进入bin文件夹，然后复制地址栏的地址，</p><p><img src="https://wsmcb.github.io/img/mysql位置.jpg" alt="Mysql位置"></p><p>复制完成后打开控制面板-&gt;系统和安全-&gt;系统，点击 “高级系统设置”，</p><p><img src="https://wsmcb.github.io/img/控制面板-系统.jpg" alt="控制面板-系统"></p><p>进入高级系统设置后点击 “环境变量”，</p><p><img src="https://wsmcb.github.io/img/控制面板-系统控制.jpg" alt="控制面板-系统控制"></p><p>选择 “Path” 然后点击 “编辑”</p><p><img src="https://wsmcb.github.io/img/控制变量.jpg" alt="控制变量"></p><p>点击 “添加”</p><p><img src="https://wsmcb.github.io/img/新建.jpg" alt="新建"></p><p>粘贴之前复制的路径，如果你记得的话也可以直接输入，输入完成后回车然后确定，</p><p><img src="https://wsmcb.github.io/img/完成.jpg" alt="完成"></p><p>这样就完成了MYSQL环境变量的配置。</p><p>如果要在CMD命令行使用MYSQL的话可以直接输入 “mysql -u你的用户名 -p” 然后输入密码就可以进入MYSQL了，这里可以直接输入SQL语句，如果要退出就输入 “exit”。</p><p><img src="https://wsmcb.github.io/img/命令行用mysql.jpg" alt="命令行用mysql"></p><p>PHP的配置方法和MYSQL的差不多，打开你的PHP的安装目录，然后复制路径，我的路径是 “D:\phpStudy\php\php-7.0.12-nts”，</p><p><img src="https://wsmcb.github.io/img/PHP位置.jpg" alt="PHP位置"></p><p>然后和MYSQL一样添加环境变量，最后的添加内容是你的PHP的路径。</p><p>在命令行运行PHP的方法是输入php + 你的PHP的文件路径，例如我的D盘有一个名为hello.php的php文件，我要运行这个文件就需要输入 “php D:\hello.php”，</p><p><img src="https://wsmcb.github.io/img/CMD运行PHP.jpg" alt="CMD运行PHP"></p><p>注意！一些功能需要在服务器环境下才可以使用。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript实现鼠标拖拽</title>
      <link href="/2018/03/18/JavaScript%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E6%8B%96%E6%8B%BD/"/>
      <url>/2018/03/18/JavaScript%E5%AE%9E%E7%8E%B0%E9%BC%A0%E6%A0%87%E6%8B%96%E6%8B%BD/</url>
      
        <content type="html"><![CDATA[<p>鼠标拖拽是计算机软件中常见的一种功能，无论是拖拽文件到回收站又或是拖拽窗口，都给我们的使用带来了很多便捷和乐趣。虽然在网站中拖拽功能并不常见，但在一些地方加入拖拽功能也能带来意想不到的好处，这里就用JavaScript实现元素拖拽。<br><a id="more"></a><br>HTML和CSS代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拖拽<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        *&#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div&#123;</span></span><br><span class="line"><span class="undefined">            width: 100px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            background: #FF5080;</span></span><br><span class="line"><span class="undefined">            position: absolute;</span></span><br><span class="line"><span class="undefined">            cursor: move;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"拖拽.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要实现拖拽功能需要给被拖拽的元素设置定位，把被拖拽元素的cursor属性设置为move可提醒用户此元素是可以拖动的。</p><p>JS代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Div = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>);  <span class="comment">//  获取div元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  div鼠标按下</span></span><br><span class="line">Div.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ev = ev || event;  <span class="comment">//  获取Event 对象</span></span><br><span class="line">    <span class="keyword">var</span> X = ev.clientX - <span class="keyword">this</span>.offsetLeft;  <span class="comment">//  鼠标位置的X轴 - div的left</span></span><br><span class="line">    <span class="keyword">var</span> Y = ev.clientY - <span class="keyword">this</span>.offsetTop;  <span class="comment">//  鼠标位置的Y轴 - div的top</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  文档鼠标移动</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ev = ev || event;  <span class="comment">//  获取Event 对象</span></span><br><span class="line">        Div.style.left = ev.clientX - X + <span class="string">'px'</span>;  <span class="comment">//  设置div的left</span></span><br><span class="line">        Div.style.top = ev.clientY - Y + <span class="string">'px'</span>;  <span class="comment">//  设置div的top</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  文档鼠标按键被松开</span></span><br><span class="line">    <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;  <span class="comment">//  清空文档的移动事件</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  <span class="comment">//  阻止一些浏览器的默认事件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>div鼠标被按下后 X变量会保存鼠标当前位置 – div的left，X变量会保存鼠标当前位置 – div的top，这里给document加移动事件是为了防止因鼠标移动过快而导致鼠标移出div，当鼠标按下并且移动的时候设置div的left为鼠标当前位置 – X变量的值，top也是同理，当鼠标放开后清空document的移动事件可停止移动。这里只是写了简单的拖拽，并没有限制div的可拖动范围。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现简单单文件上传</title>
      <link href="/2018/03/17/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2018/03/17/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%8D%95%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<p>无论是社区网站还是电商网站都离不开上传文件的功能，这里就用PHP实现简单单文件上传，后续还会写更复杂的AJAX和多文件上传。<br><a id="more"></a></p><p>HTML表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"server1.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传文件"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认的文件选择按钮会比较丑，如果想美化文件选择按钮可以把文件选择按钮隐藏，定义一个普通按钮，通过普通按钮来调用文件选择按钮的点击事件。</p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$file = $_FILES[<span class="string">'img'</span>];  <span class="comment">//  把文件传给一个变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  判断是否有错误，error大于0说明有错误</span></span><br><span class="line"><span class="keyword">if</span> ($file[<span class="string">'error'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'文件上传出错!错误码'</span> . $file[<span class="string">'error'</span>]);  <span class="comment">//  不在往下执行，输出错误码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  判断文件大小是否超过1M</span></span><br><span class="line"><span class="keyword">if</span> ($file[<span class="string">'size'</span>] &gt; <span class="number">1048576</span>) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'文件大小不能超过1M'</span>);  <span class="comment">//  文件超过1M，不在往下执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  判断文件扩展名的方法有很多，这里就用正则表达式来判断扩展名</span></span><br><span class="line">$re = <span class="string">"/\.jpg$|\.png$|\.gif$/"</span>;  <span class="comment">//  用一个简单的正则表达式来判断扩展名</span></span><br><span class="line">$extensionName = <span class="keyword">array</span>();  <span class="comment">//  用来接收扩展名的数组</span></span><br><span class="line">preg_match($re, $file[<span class="string">'name'</span>], $extensionName);  <span class="comment">//  如果匹配成功会返回扩展名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  如果数组大于0说明匹配成功</span></span><br><span class="line"><span class="keyword">if</span> (count($extensionName) &lt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'不支持的文件格式'</span>);  <span class="comment">//  不在往下执行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  把上传的文件移动到指定文件夹，成功返回true 失败返回false</span></span><br><span class="line"><span class="keyword">if</span> (move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'files/'</span> . $file[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'文件上传成功'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'文件上传失败'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$_FILES全局数组可接收客户端上传的文件，第一个参数是表单的 input name，第二个下标可以是 “name”, “type”, “size”, “tmp_name” 或 “error”，这里使用的表单的input名称就是img，</p><p>详细说明：</p><ul><li>$_FILES[‘img’][‘name’] 被上传文件的名称</li><li>$_FILES[‘img’][‘size’] 被上传文件的大小，以字节计</li><li>$_FILES[‘img’][‘type’] 被上传文件的类型</li><li>$_FILES[‘img’][‘tmp_name’] 存储在服务器的文件的临时副本的名称</li><li>$_FILES[‘img’][‘error’] 由文件上传导致的错误代码</li></ul><p>错误代码说明：</p><ul><li>0 没有错误</li><li>1 上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值</li><li>2 上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值</li><li>3 文件只有部分被上传</li><li>4 没有文件被上传。 是指表单的file域没有内容</li></ul><p>move_uploaded_file()函数可以把上传的文件移动到指定文件夹，参数1是文件位置，参数2是文件名，同时也包含文件路径，成功会返回true，失败会返回false。</p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 上传文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5 localStorage简单使用方法</title>
      <link href="/2017/12/07/HTML5-localStorage%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2017/12/07/HTML5-localStorage%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>localStorage是HTML5中新增的一种本地存储功能，localStorage和cookie相比具有存储容量更大和操作简单等优点，cookie的单个存储容量一般最大不能超过4KB，而localStorage一般最大为5MB。<br><a id="more"></a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>保存：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(key, value);  <span class="comment">//  保存数据，接收键名和键值</span></span><br><span class="line">localStorage.setItem(email, <span class="string">'12345678@qq.com'</span>);  <span class="comment">//  保存一个123456789@qq.com的email</span></span><br></pre></td></tr></table></figure><p>读取：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localStorage.getItem(key);  <span class="comment">//  读取数据，接收一个键名，返回保存的文本内容，如果为找到 返回null</span></span><br><span class="line">localStorage.getItem(<span class="string">'email'</span>);  <span class="comment">//  读取刚才保存的email</span></span><br></pre></td></tr></table></figure><p>删除：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">localStorage.removeItem(key);  <span class="comment">//  删除指定键名的数据，接收一个键名</span></span><br><span class="line">localStorage.removeItem(<span class="string">'email'</span>);  <span class="comment">//  删除刚才保存的email</span></span><br><span class="line">localStorage.clear();;  <span class="comment">//  删除所有，只会删除此域名下的</span></span><br></pre></td></tr></table></figure><p>以上就是常用的localStorage方法，不过因为localStorage只能保存字符串，所以如果要存储JSON就需要先把JSON转换为字符串，而且读取的时候也需要把读取的字符串转换为JSON。localStorage是HTML5新加入的功能，只有支持HTML5的浏览器才可以使用localStorage。</p><p>下面是一些常用的localStorage功能：</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>setItem</td><td>保存数据</td></tr><tr><td>getItem</td><td>读取数据</td></tr><tr><td>key</td><td>读取第i个数据的名字或称为键值(从0开始计数)</td></tr><tr><td>length</td><td>localStorage存储变量的个数</td></tr><tr><td>propertyIsEnumerable</td><td>用来检测属性是否属于某个对象的</td></tr><tr><td>valueOf</td><td>获取所有存储的数据</td></tr><tr><td>removeItem</td><td>删除某个具体变量</td></tr><tr><td>clear</td><td>清空localStorage上存储的数据</td></tr></tbody></table><p>我的个人博客： <a href="http://www.changbin.me" target="_blank" rel="noopener">http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现简单图片验证码</title>
      <link href="/2017/12/07/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>/2017/12/07/PHP%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>验证码是网站会员系统中不可缺少的，目前验证码有很多种，但用的比较多的还是图片验证码，这里就用面向对象的方式来简单的实现图片验证码，<br><a id="more"></a></p><p>PHP代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Administrator</span></span><br><span class="line"><span class="comment"> * Date: 2017/10/6</span></span><br><span class="line"><span class="comment"> * Time: 20:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Verification</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $fontfile = <span class="string">''</span>;  <span class="comment">//  字体文件</span></span><br><span class="line">    <span class="keyword">protected</span> $width = <span class="number">120</span>;  <span class="comment">//  图片宽度 默认120</span></span><br><span class="line">    <span class="keyword">protected</span> $height = <span class="number">40</span>;  <span class="comment">//  图片高度  默认40</span></span><br><span class="line">    <span class="keyword">protected</span> $size = <span class="number">20</span>;  <span class="comment">//  字体大小  默认20</span></span><br><span class="line">    <span class="keyword">protected</span> $length = <span class="number">4</span>;  <span class="comment">//  长度  默认4个字</span></span><br><span class="line">    <span class="keyword">protected</span> $image = <span class="keyword">null</span>;  <span class="comment">//  画布资源</span></span><br><span class="line">    <span class="keyword">protected</span> $snow = <span class="number">0</span>;  <span class="comment">//  雪花干扰  默认没有干扰</span></span><br><span class="line">    <span class="keyword">protected</span> $pixel = <span class="number">0</span>;  <span class="comment">//  像素点干扰  默认没有干扰</span></span><br><span class="line">    <span class="keyword">protected</span> $line = <span class="number">0</span>;  <span class="comment">//  线段干扰  默认没有干扰</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//  初始化数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($config = array<span class="params">()</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($config) &amp;&amp; count($config) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//  检测字体文件是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'fontfile'</span>]) &amp;&amp; is_file($config[<span class="string">'fontfile'</span>])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;fontfile = $config[<span class="string">'fontfile'</span>];  <span class="comment">//  设置字体文件位置</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否传入了宽度和宽度是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'width'</span>]) &amp;&amp; $config[<span class="string">'width'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//  设置宽度属性为传入的宽度</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;width = (int)$config[<span class="string">'width'</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否传入高度和高度是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'height'</span>]) &amp;&amp; $config[<span class="string">'height'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;height = (int)$config[<span class="string">'height'</span>];  <span class="comment">//  设置高度属性</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否传入了字体大小和是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'size'</span>]) &amp;&amp; $config[<span class="string">'size'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;size = (int)$config[<span class="string">'size'</span>];  <span class="comment">//  设置字体大小属性</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否传入了验证码长度和长度是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'length'</span>]) &amp;&amp; $config[<span class="string">'length'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;length = (int)$config[<span class="string">'length'</span>];  <span class="comment">//  设置长度</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否设置了雪花干扰以及雪花数量是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'snow'</span>]) &amp;&amp; $config[<span class="string">'lsnow'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;snow = (int)$config[<span class="string">'snow'</span>];  <span class="comment">//  设置雪花干扰</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否设置了像素点干扰和数量是否大于0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'pixel'</span>]) &amp;&amp; $config[<span class="string">'pixel'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;pixel = (int)$config[<span class="string">'pixel'</span>];  <span class="comment">//  设置像素点干扰</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//  判断是否设置了线条干扰和线条数量</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($config[<span class="string">'line'</span>]) &amp;&amp; $config[<span class="string">'line'</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;line = (int)$config[<span class="string">'line'</span>];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;image = imagecreatetruecolor(<span class="keyword">$this</span>-&gt;width,<span class="keyword">$this</span>-&gt;height);  <span class="comment">//  创建画布</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;image;  <span class="comment">//  返回i画布资源</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  生成验证码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCaptcha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//  创建白色作为背景</span></span><br><span class="line">        $white = imagecolorallocate(<span class="keyword">$this</span>-&gt;image,<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">        <span class="comment">//  填充背景颜色</span></span><br><span class="line">        imagefilledrectangle(<span class="keyword">$this</span>-&gt;image, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">$this</span>-&gt;width, <span class="keyword">$this</span>-&gt;height, $white);</span><br><span class="line">        <span class="comment">//  调用生成验证码内容的方法</span></span><br><span class="line">        $str = <span class="keyword">$this</span>-&gt;generateStr(<span class="keyword">$this</span>-&gt;length);</span><br><span class="line">        <span class="comment">//  判断生成内容是否成功</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">false</span> === $str) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $fontfile = <span class="keyword">$this</span>-&gt;fontfile;  <span class="comment">//  设置字体文件位置</span></span><br><span class="line">        <span class="comment">//  使用for循环来生成图片验证码，循环次数是验证码的长度</span></span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; <span class="keyword">$this</span>-&gt;length;$i ++) &#123;</span><br><span class="line">            $size = <span class="keyword">$this</span>-&gt;size;  <span class="comment">//  设置字体大小</span></span><br><span class="line">            $angle = rand(<span class="number">-30</span>, <span class="number">30</span>);  <span class="comment">//  设置字体角度</span></span><br><span class="line">            $x = ceil(<span class="keyword">$this</span>-&gt;width / <span class="keyword">$this</span>-&gt;length) * $i + rand(<span class="number">5</span>, <span class="number">10</span>);  <span class="comment">//  设置X轴位置</span></span><br><span class="line">            $y = ceil(<span class="keyword">$this</span>-&gt;height / <span class="number">1.5</span>);  <span class="comment">//  设置X轴位置</span></span><br><span class="line">            <span class="comment">//  设置字体颜色，调用生成随机颜色的方法</span></span><br><span class="line">            $color = <span class="keyword">$this</span>-&gt;getRandColor();</span><br><span class="line">            $text = $str&#123;$i&#125;;  <span class="comment">//  设置验证码内容</span></span><br><span class="line">            <span class="comment">//  把验证码添加到画布上</span></span><br><span class="line">            imagettftext(<span class="keyword">$this</span>-&gt;image, $size, $angle, $x, $y, $color, $fontfile, $text);  </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  是否需要雪花干扰</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;snow &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;getSnow();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//  只有在没有雪花干扰的情况下才可以使用像素点和线段干扰</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;pixel) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;getPixel();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;line) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;getLine();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        header(<span class="string">'content-type:image/png'</span>);  <span class="comment">//  设置显示方式</span></span><br><span class="line">        imagepng(<span class="keyword">$this</span>-&gt;image);  <span class="comment">//  把生成的验证码图片显示在网页上</span></span><br><span class="line">        imagedestroy(<span class="keyword">$this</span>-&gt;image);  <span class="comment">//  销毁画布 节省资源</span></span><br><span class="line">        <span class="keyword">return</span> strtolower($str);  <span class="comment">//  返回生成的验证码内容，用来设置session验证</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  生成雪花干扰</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getSnow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; <span class="keyword">$this</span>-&gt;snow;$i ++) &#123;</span><br><span class="line">            imagestring(<span class="keyword">$this</span>-&gt;image, rand(<span class="number">1</span>, <span class="number">5</span>), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;width), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;height), <span class="string">'*'</span>, <span class="keyword">$this</span>-&gt;getRandColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  生成像素点干扰</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getPixel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; <span class="keyword">$this</span>-&gt;pixel;$i ++) &#123;</span><br><span class="line">            imagesetpixel(<span class="keyword">$this</span>-&gt;image, rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;width), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;height), <span class="keyword">$this</span>-&gt;getRandColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  线段干扰</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getLine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; <span class="keyword">$this</span>-&gt;line;$i ++) &#123;</span><br><span class="line">            imageline(<span class="keyword">$this</span>-&gt;image, rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;width), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;height), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;width), rand(<span class="number">0</span>, <span class="keyword">$this</span>-&gt;height), <span class="keyword">$this</span>-&gt;getRandColor());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  生成验证码字符</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">generateStr</span><span class="params">($length = <span class="number">4</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//  判断验证码长度是否小于1或大于30</span></span><br><span class="line">        <span class="keyword">if</span> ($length &lt; <span class="number">1</span> || $length &gt; <span class="number">30</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//  验证码可能出现的内容</span></span><br><span class="line">            $chars = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>, <span class="string">'u'</span>, <span class="string">'v'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>,</span><br><span class="line">                <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>, <span class="string">'R'</span>, <span class="string">'S'</span>,<span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>,</span><br><span class="line">                <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  取出指定长度的验证码</span></span><br><span class="line">        $str = join(<span class="string">''</span>, array_rand(array_flip($chars), $length));</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  用来生成随机颜色的</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRandColor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imagecolorallocate(<span class="keyword">$this</span>-&gt;image, rand(<span class="number">0</span>, <span class="number">255</span>), rand(<span class="number">0</span>, <span class="number">255</span>), rand(<span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法</p><p>对象接收一个数组，除字体文件以外其他参数可以省略，省略的参数会使用默认参数</p><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Administrator</span></span><br><span class="line"><span class="comment"> * Date: 2017/10/8</span></span><br><span class="line"><span class="comment"> * Time: 16:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'verification_class.php'</span>;  <span class="comment">//  引入类文件</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'fontfile'</span>=&gt;<span class="string">'fonts/arial.ttf'</span>,  <span class="comment">//  字体文件位置</span></span><br><span class="line">    <span class="string">'line'</span>=&gt;<span class="number">4</span>,  <span class="comment">//  设置线条干扰数量为4</span></span><br><span class="line">    <span class="string">'pixel'</span>=&gt;<span class="number">50</span>  <span class="comment">//  设置像素点干扰为50</span></span><br><span class="line">);</span><br><span class="line">$img = <span class="keyword">new</span> Verification($arr);  <span class="comment">//  实例化对象并且传入数组</span></span><br><span class="line">session_start();  <span class="comment">//  启用session</span></span><br><span class="line">$_SESSION[<span class="string">'str'</span>] = $img-&gt;getCaptcha();  <span class="comment">//  把返回的验证码保存到session</span></span><br></pre></td></tr></table></figure><p>完整的传入数组参数可在类属性看到</p><p>最终效果</p><p><img src="http://www.changbin.me/wp-content/uploads/2017/12/newscreen694839625.jpg" alt="验证码图片"></p><p>验证码的每一个字都是随机颜色，角度也是随机的，如果要让验证码在img标签显示 就把img的src设置为调用类的php文件即可。</p><p>验证方法</p><p>直接判断表单提交的参数和session保存的验证码是否一致即可。</p><p>这就是简单实现图片验证码的方法，这个验证码还有很大的优化空间。</p><p>代码下载可点击下方的下载代码链接，百度网盘提取码：w39g</p><p><a href="https://pan.baidu.com/s/1pKU5PB9" target="_blank" rel="noopener">下载代码</a></p><p><a href="http://www.changbin.me" target="_blank" rel="noopener">我的博客：http://www.changbin.me</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 验证码 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
